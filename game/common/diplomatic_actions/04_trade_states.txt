trade_states = {
	requires_approval = yes
	should_notify_third_parties = yes
	show_effect_in_tooltip = yes
	state_selection = any_required

	potential = {
		NOT = { is_country_type = decentralized }
		scope:target_country = {
			NOT = { is_country_type = decentralized }
		}
	}
	
	possible = {
		is_diplomatic_play_committed_participant = no
		scope:target_country = { is_diplomatic_play_committed_participant = no }
		custom_tooltip = {
			text = DIPLO_ACTION_RELATIONS_POOR_OR_LESS_NOT
			scope:target_country.relations:root > relations_threshold:poor
		}
		has_diplomatic_relevance = scope:target_country
		is_revolutionary = no
		in_default = no
		
		# Must have a connection to the state received even after the trade happens
		trigger_if = {
			limit = {
				exists = scope:first_state
				exists = scope:second_state
			}
			
			custom_tooltip = {
				text = DIPLO_ACTION_TRADE_STATES_WOULD_BREAK_CONNECTION		
				scope:actor = { 
					any_scope_state = {
						NOT = { this = scope:first_state }	
						OR = {
							any_neighbouring_state = { this = scope:second_state }
							AND = {
								is_coastal = yes
								scope:second_state = { is_coastal = yes }
							}
						}						
					}					
				}					
				scope:target_country = { 
					any_scope_state = {
						NOT = { this = scope:second_state }	
						OR = {
							any_neighbouring_state = { this = scope:first_state }
							AND = {
								is_coastal = yes
								scope:first_state = { is_coastal = yes }
							}
						}						
					}					
				}						
			}
		}
	}
	
	accept_effect = {
		if = {
			limit = { exists = scope:first_state }
			scope:first_state = { set_state_owner = scope:target_country }
		}
		if = {
			limit = { exists = scope:second_state }
			scope:second_state = { set_state_owner = root }
		}		
	}
	
	first_state_trigger = {
		owner = scope:country
		is_capital = no
		OR = {
			scope:target_country = { is_adjacent_to_state = root }
			AND = {
				is_coastal = yes		
				scope:target_country = { has_port = yes }
			}
		}
	}
	
	second_state_trigger = {
		owner = scope:country
		is_capital = no
		OR = {
			scope:target_country = { is_adjacent_to_state = root }
			AND = {
				is_coastal = yes		
				scope:target_country = { has_port = yes }
			}
		}		
	}	
	
	ai = {
		propose_score = {
			value = 0
		}
	
		will_propose = {
			always = no
		}
		
		accept_score = {
			value = 0
			
			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}				
			
			if = {
				limit = {
					exists = scope:first_state
					NOT = { exists = scope:second_state }
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_GIVING_AWAY_LAND"
					value = 1000
				}			
			}	
		}
	}
}