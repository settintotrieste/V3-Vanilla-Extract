l_german:
 PRESTIGE_FROM_COUNTRY_GDP:1 "#variable $VALUE|+=$#! durch [concept_gdp]"
 PRESTIGE_FROM_ARMY_POWER_PROJECTION:1 "#variable $VALUE|+=$#! durch Armee-[concept_power_projection]"
 PRESTIGE_FROM_NAVY_POWER_PROJECTION:1 "#variable $VALUE|+=$#! durch Marine-[concept_power_projection]"
 PRESTIGE_FROM_COUNTRY_TIER:1 "#variable $VALUE|+=$#! durch den [concept_country_tier] „$TIER|v$“"
 PRESTIGE_FROM_SUBJECT_GDP:2 "#variable $VALUE|+=$#! durch das [concept_gdp] von [Concept('concept_subject', '$concept_subjects$')]"
 PRESTIGE_FROM_SUBJECT_ARMY_POWER_PROJECTION:2 "#variable $VALUE|+=$#! durch Armee [concept_power_projection] von [Concept('concept_subject', '$concept_subjects$')]"
 PRESTIGE_FROM_SUBJECT_NAVY_POWER_PROJECTION:2 "#variable $VALUE|+=$#! durch Marine-[concept_power_projection] von [Concept('concept_subject', '$concept_subjects$')]"
 PRESTIGE_FROM_GOODS_LEADERBOARDS:1 "#tooltippable #tooltip:[Country.GetTooltipTag],PRESTIGE_FROM_GOODS_LEADERBOARDS_BREAKDOWN #v $VAL|+=$#!#!#! durch Vorreiterschaft als Warenproduzent"
 PRESTIGE_FROM_GOODS_LEADERBOARDS_BREAKDOWN:1 "[Country.GetGoodsLeaderboardDesc]"
 NO_PRESTIGE_RANKING:0 "Dieses [concept_country] hat keinen [concept_prestige]-Rang durch den Status als #variable $COUNTRY_TYPE$#!."
 ARMY_POWER_PROJECTION_DESC:0 "#header $ADJECTIVE$ Armee-[concept_power_projection]: $VALUE|v0$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 NAVY_POWER_PROJECTION_DESC:0 "#header $ADJECTIVE$ Marine-[concept_power_projection]: $VALUE|v0$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
 great_power:1 "[concept_great_power]"
 great_power_desc:0 "[concept_great_power_desc]"
 major_power:1 "[concept_major_power]"
 major_power_desc:0 "[concept_major_power_desc]"
 minor_power:1 "[concept_minor_power]"
 minor_power_desc:0 "[concept_minor_power_desc]"
 insignificant_power:1 "[concept_insignificant_power]"
 insignificant_power_desc:0 "[concept_insignificant_power_desc]"
 decentralized_nation:1 "[concept_decentralized_nation]"
 decentralized_nation_desc:0 "[concept_decentralized_nation_desc]"
 unrecognized_power:1 "[concept_unrecognized_power]"
 unrecognized_power_desc:0 "[concept_unrecognized_power_desc]"
 unrecognized_regional_power:1 "[Concept('concept_unrecognized_power', '$concept_unrecognized_regional_power$')]"
 unrecognized_regional_power_desc:0 "[concept_unrecognized_power_desc]"
 unrecognized_major_power:1 "[Concept('concept_unrecognized_power', '$concept_unrecognized_major_power$')]"
 unrecognized_major_power_desc:0 "[concept_unrecognized_power_desc]"
 
 country_humiliated:2 "Gedemütigt durch Rivalen"
 forced_market_opening:0 "[concept_open_market] erzwungen"
 forced_slavery_ban:0 "[concept_slavery]-Verbot erzwungen"
 forced_regime_change:0 "Erzwungener Regimewechsel"
 
 centralized:0 "Zentralland"
 colonial:0 "Kolonialland"
 decentralized:0 "Dezentral-Nation"
 unrecognized:0 "Nebenland"
 
 country_tier_city_state:0 "Stadtstaat"
 country_tier_principality:0 "Fürstentum"
 country_tier_grand_principality:0 "Großfürstentum"
 country_tier_kingdom:0 "Königreich"
 country_tier_empire:0 "Großreich"
 country_tier_hegemony:0 "Hegemonie"
 
 DIPLO_PLAY_GREAT_POWER_TRIGGER:0 "Wir müssen eine [concept_great_power] sein, um dieses [concept_diplomatic_play] beginnen zu können"
 DIPLO_PLAY_OUTRAGED_TRIGGER:0 "Ihre [Concept('concept_infamy', 'Verrufenheitsstufe')] muss mindestens „$infamy_pariah$“ sein"
 
 DIPLO_ACTION_RELATIONS:2 "[concept_relations] zwischen [SCOPE.GetRootScope.GetCountry.GetAltName('DAT')] und [SCOPE.sC('target_country').GetAltName('DAT')]"
 DIPLO_ACTION_RELATIONS_CORDIAL:1 "$DIPLO_ACTION_RELATIONS$ sind $relations_cordial$"
 DIPLO_ACTION_RELATIONS_CORDIAL_NOT:1 "$DIPLO_ACTION_RELATIONS$ sind NICHT $relations_cordial$"
 DIPLO_ACTION_RELATIONS_AMICABLE:1 "$DIPLO_ACTION_RELATIONS$ sind $relations_amicable$"
 DIPLO_ACTION_RELATIONS_AMICABLE_NOT:1 "$DIPLO_ACTION_RELATIONS$ sind NICHT $relations_amicable$"
 DIPLO_ACTION_RELATIONS_FRIENDLY:1 "$DIPLO_ACTION_RELATIONS$ sind $relations_friendly$"
 DIPLO_ACTION_RELATIONS_FRIENDLY_NOT:1 "$DIPLO_ACTION_RELATIONS$ sind NICHT $relations_friendly$"
 DIPLO_ACTION_RELATIONS_POOR:1 "$DIPLO_ACTION_RELATIONS$ sind $relations_poor$"
 DIPLO_ACTION_RELATIONS_POOR_NOT:1 "$DIPLO_ACTION_RELATIONS$ sind NICHT $relations_poor$"
 DIPLO_ACTION_RELATIONS_COLD:1 "$DIPLO_ACTION_RELATIONS$ sind $relations_cold$"
 DIPLO_ACTION_RELATIONS_COLD_NOT:1 "$DIPLO_ACTION_RELATIONS$ sind NICHT $relations_cold$"
 DIPLO_ACTION_RELATIONS_HOSTILE:1 "$DIPLO_ACTION_RELATIONS$ sind $relations_hostile$"
 DIPLO_ACTION_RELATIONS_HOSTILE_NOT:1 "$DIPLO_ACTION_RELATIONS$ sind NICHT $relations_hostile$"
 DIPLO_ACTION_RELATIONS_CORDIAL_OR_GREATER:1 "$DIPLO_ACTION_RELATIONS$ sind mindestens $relations_cordial$"
 DIPLO_ACTION_RELATIONS_CORDIAL_OR_GREATER_NOT:1 "$DIPLO_ACTION_RELATIONS$ sind weniger als $relations_cordial$"
 DIPLO_ACTION_RELATIONS_AMICABLE_OR_GREATER:1 "$DIPLO_ACTION_RELATIONS$ sind mindestens $relations_amicable$"
 DIPLO_ACTION_RELATIONS_AMICABLE_OR_GREATER_NOT:1 "$DIPLO_ACTION_RELATIONS$ sind weniger als $relations_amicable$"
 DIPLO_ACTION_RELATIONS_POOR_OR_LESS:1 "$DIPLO_ACTION_RELATIONS$ bei $relations_poor$ oder weniger"
 DIPLO_ACTION_RELATIONS_POOR_OR_LESS_NOT:1 "$DIPLO_ACTION_RELATIONS$ sind über $relations_poor$"
 DIPLO_ACTION_RELATIONS_COLD_OR_LESS:1 "$DIPLO_ACTION_RELATIONS$ bei $relations_cold$ oder weniger"
 DIPLO_ACTION_RELATIONS_COLD_OR_LESS_NOT:1 "$DIPLO_ACTION_RELATIONS$ sind über $relations_cold$"
 DIPLO_ACTION_MARKET_CONNECTION_REQUIRED:0 "Wir müssen entweder eine Landverbindung zwischen unseren [Concept('concept_market_capitals', 'Marktsitzen')] haben oder in der Lage sein, eine [concept_port_connection] mit dem Markt ([SCOPE.sC('target_country').GetCapital.GetMarket.GetName]) aufzubauen"
 DIPLO_ACTION_MARKET_CONNECTION_REQUIRED_CHANGE:0 "Wir müssen entweder eine Landverbindung zwischen unseren [Concept('concept_market_capitals', 'Marktsitzen')] haben oder in der Lage sein, eine [concept_port_connection] zu [SCOPE.sC('target_country').GetCapital.GetName] aufzubauen"

 relations_friendly:0 "#P Freundlich#!"
 relations_amicable:0 "#P Einvernehmlich#!"
 relations_cordial:0 "#P Herzlich#!"
 relations_neutral:0 "#V Neutral#!"
 relations_poor:0 "#N Schlecht#!"
 relations_cold:0 "#N Kalt#!"
 relations_hostile:0 "#N Feindselig#!"
 
 tension_calm:0 "#G Ruhig#!"
 tension_uneasy:0 "#V Belastet#!"
 tension_tense:0 "#N Angespannt#!"
 tension_volatile:0 "#N Instabil#!"
 
 infamy_reputable:0 "#V Achtbar#!"
 infamy_infamous:0 "#N Berüchtigt#!"
 infamy_notorious:0 "#N Verschrien#!"
 infamy_pariah:0 "#N Ausgestoßen#!"
 
 subject_type_protectorate:0 "[concept_protectorate]"
 subject_type_puppet:0 "[concept_puppet]"
 subject_type_tributary:0 "[concept_tributary]"
 subject_type_vassal:0 "[concept_vassal]"
 subject_type_dominion:0 "[concept_dominion]"
 subject_type_personal_union:0 "[concept_personal_union]"
 subject_type_customs_union:0 "[concept_customs_union]"
 
 SUBJECT_CANNOT_HAVE_SUBJECTS:1 " [COUNTRY.GetAltName('NOM')|U] kann keine eigenen Klientelländer haben, weil es ein [concept_subject] vom Typ „$SUBJECT_TYPE|v$“ ist!"
 SUBJECT_MUST_BE_HIGHER_COUNTRY_RANK:1 " $COUNTRY_NAME$ muss einen höheren [concept_rank] als $COUNTRY_OTHER_NAME$ haben, um es zu einem [concept_subject] vom Typ „$SUBJECT_TYPE|v$“ zu machen"
 SUBJECT_INVALID_OVERLORD_RANK:1 " $COUNTRY_NAME$ kann kein [concept_subject] vom Typ „$SUBJECT_TYPE|v$“ haben, da sein [concept_rank] bei „$RANK|v$“ liegt"
 SUBJECT_INVALID_SUBJECT_RANK:1 " $COUNTRY_NAME$ kann kein [concept_subject] vom Typ „$SUBJECT_TYPE|v$“ werden, da sein [concept_rank] bei „$RANK|v$“ liegt"
 SUBJECT_MUST_BE_SAME_COUNTRY_TYPE:1 " $COUNTRY_NAME$ kann $COUNTRY_OTHER_NAME$ nicht als [concept_subject] vom Typ „$SUBJECT_TYPE|v$“ haben, weil es ein Land vom Typ „$COUNTRY_TYPE|v$“ ist"
 SUBJECT_INVALID_OVERLORD_COUNTRY_TYPE:1 " $COUNTRY_NAME$ kann kein [concept_subject] vom Typ „$SUBJECT_TYPE|v$“ haben, weil es ein Land vom Typ „$COUNTRY_TYPE|v$“ ist"
 SUBJECT_INVALID_SUBJECT_COUNTRY_TYPE:1 " $COUNTRY_NAME$ kann kein [concept_subject] vom Typ „$SUBJECT_TYPE|v$“ werden, weil es ein Land vom Typ „$COUNTRY_TYPE|v$“ ist"
 SUBJECT_IS_ALREADY_SUBJECT:1 " [TARGET_COUNTRY.GetAltName('NOM')|U] ist bereits [concept_subject] eines anderen Landes"
 SUBJECT_NOT_VALID_CHANGE:1 " Es ist nicht möglich, ein [concept_subject] vom Typ „$SUBJECT_TYPE_FROM|v$“ zu einem [concept_subject] vom Typ „$SUBJECT_TYPE|v$“ zu ändern"
 SUBJECT_OVERLORD_IS_SUBJECT:1 " [COUNTRY.GetAltName('NOM')|U] kann seinen Suzerän – [TARGET_COUNTRY.GetAltName('AKK')] – nicht zu einem [concept_subject] machen"

 protector:0 "Beschützer"
 suzerain:0 "Suzerän"
 obligation:1 "[concept_obligation]"
 RELEASE:0 "Entlassen"
 CONFIRM:0 "Bestätigen"
 CANCEL:0 "Abbrechen"
 USE_OBLIGATION:1 "[concept_obligation] einsetzen"
 OWE_OBLIGATION:1 "[concept_obligation] schulden"
 CALLING_IN_OBLIGATION:1 "[concept_obligation] einfordern"
 OFFERING_OBLIGATION:1 "[concept_obligation] anbieten"
 THEY_DO_NOT_OWE_OBLIGATION:1 "Sie schulden uns keine [concept_obligation]."
 THEY_OWE_OBLIGATION:1 "Sie schulden uns bereits eine [concept_obligation]."
 WE_OWE_OBLIGATION:1 "Wir schulden ihnen bereits eine [concept_obligation]."
 EXISTING_PACT:0 "Wert des bestehenden Diplomatiepakts „[DIPLOMATIC_PACT.GetName]“"
 NO_PACT_TO_TRANSFER:0 "Es gibt keinen [concept_diplomatic_pact] dieses Typs zum Übertragen"
 
 AI_WILL_ACCEPT:0 "#P Sie würden diesen Vorschlag annehmen#!"
 AI_WILL_NOT_ACCEPT:0 "#N Sie würden diesen Vorschlag NICHT annehmen#!"
 AI_WILL_ACCEPT_BREAKDOWN:0 "Annahmewert: #variable [DiplomaticAction.GetAcceptanceValue|+=]#!\n[DiplomaticAction.GetWillAIAcceptDesc]"
 AI_WILL_ACCEPT_BREAKDOWN_WITH_CALL_IN_OBLIGATION:1 "Annahmewert: #variable [DiplomaticAction.GetAcceptanceValueWithCallInObligation|+=]#!\n[DiplomaticAction.GetWillAIAcceptDescWithCallInObligation]"
 AI_WILL_ACCEPT_BREAKDOWN_WITH_OWE_OBLIGATION:1 "Annahmewert: #variable [DiplomaticAction.GetAcceptanceValueWithOweObligation|+=]#!\n[DiplomaticAction.GetWillAIAcceptDescWithOweObligation]"
 AI_WILL_ACCEPT_DESC:0 "$AI_WILL_ACCEPT$\n$TOOLTIP_DELIMITER$\n$AI_WILL_ACCEPT_BREAKDOWN$"
 AI_WILL_NOT_ACCEPT_DESC:0 "$AI_WILL_NOT_ACCEPT$\n$TOOLTIP_DELIMITER$\n$AI_WILL_ACCEPT_BREAKDOWN$"
 PLAYER_MIGHT_ACCEPT:0 "Sie könnten annehmen"
 PLAYER_MIGHT_ACCEPT_DESC:0 "Ist ein Spieler und kann selbst entscheiden, ob er annimmt oder nicht"
 AI_WILL_ACCEPT_ENTRY_FORMAT:1 "$SCRIPT_VALUE_KEY_AFTER_FORMAT$"

 DIPLOMATIC_ACCEPTANCE_BASE:1 "Grundzurückhaltung"
 DIPLOMATIC_ACCEPTANCE_SENIOR_PART:1 "[SCOPE.GetRootScope.GetCountry.GetAltNameNoFormatting('NOM')] wäre Seniorpartner in der [concept_customs_union]"
 DIPLOMATIC_ACCEPTANCE_ATTITUDE:1 "[SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting]e [concept_attitude] zu uns ist [SCOPE.GetRootScope.GetCountry.GetAttitudeTowards(SCOPE.sCountry('actor')).GetName]"
 DIPLOMATIC_ACCEPTANCE_INFAMY:1 "Unsere [concept_infamy]-Stufe ist [SCOPE.sCountry('actor').GetInfamyLabel]"
 DIPLOMATIC_ACCEPTANCE_RELATIONS:1 "[SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting]-[SCOPE.sCountry('actor').GetAdjectiveNoFormatting|l]e [concept_relations] sind [SCOPE.GetRootScope.GetCountry.GetRelationsWithDesc(SCOPE.sCountry('actor'))]"
 DIPLOMATIC_ACCEPTANCE_RANK:1 "[SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting]er [concept_rank] als [SCOPE.GetRootScope.GetCountry.GetRank] verglichen mit unserem [concept_rank] als [SCOPE.sCountry('actor').GetRank]"
 DIPLOMATIC_ACCEPTANCE_ARMY_STRENGTH:1 "[SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting]e Armee-[concept_power_projection] verglichen mit unserer"
 DIPLOMATIC_ACCEPTANCE_NAVY_STRENGTH:1 "[SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting]e Marine-[concept_power_projection] verglichen mit unserer"
 DIPLOMATIC_ACCEPTANCE_GDP:1 "[SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting]es $GDP_SHORT$ (@money![SCOPE.GetRootScope.GetCountry.GetGDP|Dv]) verglichen mit unserem $GDP_SHORT$ (@money![SCOPE.sCountry('actor').GetGDP|Dv])"
 DIPLOMATIC_ACCEPTANCE_NEIGHBORS:1 "Wir sind [concept_neighbors] [SCOPE.GetRootScope.GetCountry.GetAltName('GEN')]"
 DIPLOMATIC_ACCEPTANCE_NOT_NEIGHBORS:1 "Wir sind KEINE [concept_neighbors] [SCOPE.GetRootScope.GetCountry.GetAltName('GEN')]"
 DIPLOMATIC_ACCEPTANCE_ADJACENT_MARKETS:0 "Der [SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting|l]e [concept_market] grenzt an unseren"
 DIPLOMATIC_ACCEPTANCE_NOT_ADJACENT_MARKETS:0 "Der [SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting|l]e [concept_market] grenzt NICHT an unseren"
 DIPLOMATIC_ACCEPTANCE_ISOLATIONIST:1 "Sie verfolgen die [concept_ai_strategy] #v $ai_strategy_armed_isolationism$#!"
 DIPLOMATIC_ACCEPTANCE_ECONOMIC_IMPERIALISM:0 "Sie verfolgen die [concept_ai_strategy] #v $ai_strategy_economic_imperialism$#!"
 DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION:1 "Ideologische Ähnlichkeiten unserer [Concept('concept_government', '$concept_governments$')]"
 DIPLOMATIC_ACCEPTANCE_IDEOLOGICAL_OPINION_NEGATIVE:0 "Ideologische Unterschiede unserer [Concept('concept_government', '$concept_governments$')]"
 DIPLOMATIC_ACCEPTANCE_ALLIED_TO_RIVALS:1 "Wir haben [Concept('concept_alliance', '$concept_alliances$')] oder [Concept('concept_defensive_pact', '$concept_defensive_pacts$')] mit [SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting|l]en [Concept('concept_rivalry','$concept_rivals$')]"
 DIPLOMATIC_ACCEPTANCE_ALLIED_TO_ALLIES:1 "Wir haben [Concept('concept_alliance', '$concept_alliances$')] oder [Concept('concept_defensive_pact', '$concept_defensive_pacts$')] mit [SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting|l]en Verbündeten"
 DIPLOMATIC_ACCEPTANCE_NUM_ALLIES:1 "Zahl der [SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting|l]en [Concept('concept_alliance', '$concept_alliances$')]"
 DIPLOMATIC_ACCEPTANCE_NUM_DEFENSIVE_PACTS:1 "Zahl der [SCOPE.GetRootScope.GetCountry.GetAdjectiveNoFormatting|l]en [Concept('concept_defensive_pact', '$concept_defensive_pacts$')]"
 DIPLOMATIC_ACCEPTANCE_DEFENSIVE_PACT:1 "Wir haben einen [concept_defensive_pact]"
 DIPLOMATIC_ACCEPTANCE_CUSTOMS_UNION:0 "Wir haben eine [concept_customs_union]"
 DIPLOMATIC_ACCEPTANCE_NO_CUSTOMS_UNION:0 "Wir haben #b keine#  [concept_customs_union]"
 DIPLOMATIC_ACCEPTANCE_POWERFUL_PROTECTORS_THEM:0 "Sie haben mächtige Beschützer"
 DIPLOMATIC_ACCEPTANCE_POWERFUL_PROTECTORS_US:0 "Wir haben mächtige Beschützer"
 DIPLOMATIC_ACCEPTANCE_TRUCE:0 "Wir haben einen Waffenstillstand"
 DIPLOMATIC_ACCEPTANCE_DEBT:0 "Größe der [SCOPE.GetRootScope.GetCountry.GetAdjective|l]en [concept_loans]"
 
 DIPLOMATIC_ACCEPTANCE_NO_MUTUAL_TRADE_ROUTES:0 "Keine [Concept('concept_trade_route', '$concept_trade_routes$')] zwischen unseren [Concept('concept_market', '$concept_markets$n')]"
 DIPLOMATIC_ACCEPTANCE_MUTUAL_TRADE_ROUTES:0 "Durch das Volumen der [Concept('concept_trade_route', '$concept_trade_routes$')] zwischen unseren [Concept('concept_market', '$concept_markets$n')]"
 DIPLOMATIC_INCIDENT_WARGOAL_DESC:0 "Dies zu verlangen, wird zu einem [concept_diplomatic_incident] in der Region „$STRATEGIC_REGION$“ führen, was [COUNTRY.GetAltName('DAT')] #N #B #tooltippable #tooltip:$INFAMY_BREAKDOWN_TAG$ $INFAMY_AMOUNT|1$#!#!#!#! [concept_infamy] einbringt und seine $RELATIONS$ zu #tooltippable #tooltip:$RELATIONS_BREAKDOWN_TAG$ $NUM_COUNTRIES_IMPACTED|v$ Ländern verschlechtert#!#!"
 DIPLOMATIC_INCIDENT_NON_WARGOAL_DESC:0 "Wird zu einem [concept_diplomatic_incident] in der Region „$STRATEGIC_REGION$“ führen, was [COUNTRY.GetAltName('DAT')] #N #B #tooltippable #tooltip:$INFAMY_BREAKDOWN_TAG$ $INFAMY_AMOUNT|1$#!#!#!#! [concept_infamy] einbringt und seine $RELATIONS$ zu #tooltippable #tooltip:$RELATIONS_BREAKDOWN_TAG$ $NUM_COUNTRIES_IMPACTED|v$ Ländern verschlechtert#!#!"
 DIPLOMATIC_INCIDENT_RELATIONS_IMPACT:2 "[COUNTRY.GetAdjectiveNoFormatting]e [concept_relations] mit [COUNTRY_THIRD_PARTY.GetAltName('DAT')]: $AMOUNT|=+$"
 WARGOAL_BASE_TYPE_VALUE:0 "Grundwert für $TYPE$: #BOLD $VAL|Dv$#!"
 WARGOAL_MULT_FROM_POPULATION:1 "Multipliziert mit #v x$MULT$#! aufgrund der Gesamtbevölkerung des Ziels"
 WARGOAL_PRIMARY_IS_FREE:0 "Haupt-[concept_war_goal] hat niemals [concept_maneuver]-Kosten"
 INFAMY_EFFECT_FROM_RANK:0 "[COUNTRY.GetAltName('NOM')|U] hat den Rang „$RANK_NAME|v$“: $EFFECT|%=-$"
 WARGOAL_MULT_FROM_HOMELANDS:0 "Ziel ist ein [concept_homeland] für [COUNTRY.GetAltName('AKK')]: $EFFECT|%=-$"
 WARGOAL_MULT_FROM_OWN_SUBJECT:0 "Multipliziert mit #v x$EFFECT$#!, weil [TARGET_COUNTRY.GetAltName('NOM')] ein [concept_subject] [COUNTRY.GetAltName('VON')] ist"
 
 RELATIONS:2 "[concept_relations]"
 ATTITUDE:0 "[concept_attitude]"
 AI_STRATEGIES:0 "[Concept('concept_ai_strategy', '$concept_ai_strategies$')]"
 
 DIPLO_ACTION_IS_ACTIVE:0 "#b Derzeit aktiv#!"
 DIPLO_ACTION:0 "[DIPLOMATIC_ACTION.GetName]"
 DIPLO_ACTION_PROPOSE:0 "[DIPLOMATIC_ACTION.GetProposeName]"
 DIPLO_ACTION_BREAK:0 "[DIPLOMATIC_ACTION.GetBreakName]"
 DIPLO_ACTION_ASK_TO_BREAK:0 "[DIPLOMATIC_ACTION.GetAskToBreakName]"
 DIPLOMATIC_ACTION_TOO_SOON:0 "Wir müssen bis #variable $DATE$#! warten, um wieder Diplomatie mit #variable $COUNTRY$#! betreiben zu können."
 CANNOT_AFFORD_DIPLO_PACT:0 "Es müssen mindestens @inf!#BOLD #V $COST|1=+$#!#! vorhanden sein, um diese [concept_diplomatic_action] aufrechtzuerhalten"
 DIPLO_PACT_COST_DETAILS:0 "[DiplomaticAction.GetMaintenanceCostDetailsDesc]"
 DIPLO_PACT_COST:0 "Unterhaltskosten: #tooltippable #tooltip:$TAG$,DIPLO_PACT_COST_DETAILS @inf![DIPLOMATIC_ACTION.GetMaintenanceCost]#!#!"
 DIPLO_ACTION_PENDING:0 "Unserem Vorschlag muss noch zugestimmt werden"
 DIPLO_ACTION_REVERSE_PENDING:0 "Ihrem Vorschlag muss noch zugestimmt werden"
 DIPLO_PACT_RELATIONS_CHANGE_POS:2 "Die laufenden Bemühungen, um die #b [concept_relations] zu verbessern#!, sind bei $PROGRESS|2%v$ Fortschritt ($PROGRESS_DAILY|%=v2$/Tag) und werden bis $DATE|v$ dazu führen, dass die [concept_relations] sich beidseitig um #P #b +1#!#! ändern"
 DIPLO_PACT_RELATIONS_CHANGE_NEG:2 "Die laufenden Bemühungen, um die #b [concept_relations] zu beschädigen#!, sind bei $PROGRESS|2%v$ Fortschritt ($PROGRESS_DAILY|%=v2$/Tag) und werden bis $DATE|v$ dazu führen, dass die [concept_relations] sich beidseitig um #N #b -1#!#! ändern"
 DIPLO_ACTION_FORCED_DURATION:0 "Dieser Pakt kann von uns erst ab $DATE|v$ gebrochen werden."
 DIPLOMATIC_PACT_HEADER:0 "#header [DiplomaticPact.GetName]#!"
 DIPLOMATIC_PACT_DESC:0 "[DiplomaticPact.GetDesc]"
 DIPLOMATIC_PACT_TOOLTIP:0 "$DIPLOMATIC_PACT_HEADER$\n$TOOLTIP_DELIMITER$\n$DIPLOMATIC_PACT_DESC$"
 DIPLO_PACT_RELATIONS_CHANGE_MAX_CAP:3 " (bis zu einem Maximum von $MAX_VALUE|=+$)"
 DIPLO_PACT_RELATIONS_CHANGE_MIN_CAP:3 " (bis zu einem Minimum von $MIN_VALUE|=+$)"
 DIPLO_PACT_RELATIONS_CHANGE_POS_EFFECT:2 "[DiplomaticPact.GetName|b]: #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $PROGRESS_DAILY|%=2$#!#!#! Fortschritt täglich durch [DiplomaticPact.GetFirstCountry.GetAltName('AKK')], um die [concept_relations] zu verbessern$MAXDESC$"
 DIPLO_PACT_RELATIONS_CHANGE_NEG_EFFECT:2 "[DiplomaticPact.GetName|b]: #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $PROGRESS_DAILY|%=2$#!#!#! Fortschritt täglich durch [DiplomaticPact.GetFirstCountry.GetAltName('AKK')], um die [concept_relations] zu verschlechtern$MINDESC$"
 
 # Unilateral actions
 increase_relations:0 "Beziehungen verbessern"
 increase_relations_action_name:2 "[concept_relations] verbessern"
 increase_relations_action_propose_name:2 "Beginnen, [concept_relations] zu verbessern"
 increase_relations_action_break_name:2 "Aufhören, [concept_relations] zu verbessern"
 increase_relations_desc:2 "#header $increase_relations$#!\n$TOOLTIP_DELIMITER$\nEine [concept_ongoing_diplomatic_action], die die [concept_relations] zwischen zwei [Concept('concept_country', 'Ländern')] im Lauf der Zeit verbessert."
 increase_relations_action_notification_name:2 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat aufgehört, die [concept_relations] zu verbessern"
 increase_relations_pact_desc:2 "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('NOM')|U] verbessert aktiv die eigenen [concept_relations] mit [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('DAT')]."
 increase_relations_action_notification_desc:3 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat begonnen, die gegenseitigen [concept_relations] zu verbessern; derzeit liegen sie bei #tooltippable #tooltip:COUNTRY_RELATIONS_TOOLTIP [INITIATOR_COUNTRY.GetRelationsWithDesc(GetPlayer)|+]#!#! (#BOLD #tooltippable #tooltip:COUNTRY_RELATIONS_TOOLTIP [INITIATOR_COUNTRY.GetRelationsWith(GetPlayer)|+]#!#!#!). Seine [concept_attitude] uns gegenüber ist #tooltippable #tooltip:[INITIATOR_COUNTRY.GetTooltipTag],COUNTRY_ATTITUDE_TOOLTIP [INITIATOR_COUNTRY.GetAttitudeTowards(GetPlayer).GetName]#!#!."
 increase_relations_action_notification_break_name:2 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat aufgehört, die [concept_relations] zu verbessern"
 increase_relations_action_notification_break_desc:2 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat aufgehört, unsere gegenseitigen [concept_relations] zu verbessern."
 
 increase_relations_effect_desc_global:0 "Beginnt damit, die [concept_relations] zu verbessern"
 increase_relations_effect_desc_first:0 "[COUNTRY.GetAltNameNoFlag('NOM')|U] beginnt damit, die [concept_relations] zu [TARGET_COUNTRY.GetAltName('DAT')] zu verbessern"
 increase_relations_effect_desc_third:0 "[COUNTRY.GetAltName('NOM')|U] beginnt damit, die [concept_relations] zu [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('DAT'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('DAT'))] zu verbessern"
 
 increase_relations_trigger_desc_global:0 "Verbessert die [concept_relations]"
 increase_relations_trigger_false_desc_global:0 "Verbessert die [concept_relations]"
 increase_relations_trigger_desc_first:0 "[COUNTRY.GetAltNameNoFlag('NOM')|U] verbessert #b nicht#! die [concept_relations] zu [TARGET_COUNTRY.GetAltName('DAT')]"
 increase_relations_trigger_false_desc_first:0 "[COUNTRY.GetAltNameNoFlag('NOM')|U] verbessert die [concept_relations] zu [TARGET_COUNTRY.GetAltName('DAT')]"
 increase_relations_trigger_desc_third:0 "[COUNTRY.GetAltName('NOM')|U] verbessert #b nicht#! die [concept_relations] zu [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('DAT'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('DAT'))]"
 increase_relations_trigger_false_desc_third:0 "[COUNTRY.GetAltName('NOM')|U] verbessert #b nicht#! die [concept_relations] zu [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('DAT'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('DAT'))]"
 
 damage_relations:0 "Beziehungen beschädigen"
 damage_relations_action_name:2 "[concept_relations] beschädigen"
 damage_relations_action_propose_name:2 "Beginnen, [concept_relations] zu beschädigen"
 damage_relations_action_break_name:2 "Aufhören, [concept_relations] zu beschädigen"
 damage_relations_desc:2 "#header $damage_relations$#!\n$TOOLTIP_DELIMITER$\nEine [concept_ongoing_diplomatic_action], die die [concept_relations] zwischen zwei [Concept('concept_country', 'Ländern')] im Lauf der Zeit verschlechtert."
 damage_relations_action_notification_name:2 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat aufgehört, die [concept_relations] zu beschädigen"
 damage_relations_pact_desc:2 "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('NOM')|U] beschädigt aktiv die eigenen [concept_relations] mit [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('DAT')]."
 damage_relations_action_notification_desc:3 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat begonnen, die gegenseitigen [concept_relations] zu beschädigen; derzeit liegen sie bei #tooltippable #tooltip:COUNTRY_RELATIONS_TOOLTIP [INITIATOR_COUNTRY.GetRelationsWithDesc(GetPlayer)|+]#!#! (#BOLD #tooltippable #tooltip:COUNTRY_RELATIONS_TOOLTIP [INITIATOR_COUNTRY.GetRelationsWith(GetPlayer)|+]#!#!#!). Seine [concept_attitude] uns gegenüber ist #tooltippable #tooltip:[INITIATOR_COUNTRY.GetTooltipTag],COUNTRY_ATTITUDE_TOOLTIP [INITIATOR_COUNTRY.GetAttitudeTowards(GetPlayer).GetName]#!#!."
 damage_relations_action_notification_break_name:2 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat aufgehört, die [concept_relations] zu beschädigen"
 damage_relations_action_notification_break_desc:2 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat aufgehört, unsere gegenseitigen [concept_relations] zu beschädigen."

 damage_relations_effect_desc_global:0 "Beginnt damit, die [concept_relations] zu beschädigen"
 damage_relations_effect_desc_first:0 "[COUNTRY.GetAltNameNoFlag('NOM')|U] beginnt damit, die [concept_relations] zu [TARGET_COUNTRY.GetAltName('DAT')] zu beschädigen"
 damage_relations_effect_desc_third:0 "[COUNTRY.GetAltName('NOM')|U] beginnt damit, die [concept_relations] zu [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('DAT'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('DAT'))] zu beschädigen"
 
 damage_relations_trigger_desc_global:0 "Beschädigt die [concept_relations]"
 damage_relations_trigger_false_desc_global:0 "Beschädigt #b nicht#! die [concept_relations]"
 damage_relations_trigger_desc_first:0 "[COUNTRY.GetAltNameNoFlag('NOM')|U] beschädigt die [concept_relations] zu [TARGET_COUNTRY.GetAltName('DAT')]"
 damage_relations_trigger_false_desc_first:0 "[COUNTRY.GetAltNameNoFlag('NOM')|U] beschädigt #b nicht#! die [concept_relations] zu [TARGET_COUNTRY.GetAltName('DAT')]"
 damage_relations_trigger_desc_third:0 "[COUNTRY.GetAltName('NOM')|U] beschädigt die [concept_relations] zu [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('DAT'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('DAT'))]"
 damage_relations_trigger_false_desc_third:0 "[COUNTRY.GetAltName('NOM')|U] beschädigt #b nicht#! die [concept_relations] zu [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('DAT'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('DAT'))]"
 
 redeem_obligation:1 "Von Verpflichtung entbinden"
 redeem_obligation_action_name:1 "Von [concept_obligation] entbinden"
 redeem_obligation_desc:3 "#header $redeem_obligation$#!\n$TOOLTIP_DELIMITER$\nEine [concept_instant_diplomatic_action], die die geschuldete [concept_obligation] eines [Concept('concept_country', 'Landes')] gegenüber einem anderen für eine sofortige Verbesserung der [concept_relations] verfallen lässt."
 redeem_obligation_action_notification_name:1 "Von [concept_obligation] entbunden"
 redeem_obligation_action_notification_desc:1 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat uns von der [concept_obligation] entbunden, die wir ihm schuldeten. Dadurch haben sich unsere Beziehungen verbessert."

 expel_diplomats:0 "Diplomaten ausweisen"
 expel_diplomats_action_name:0 "Diplomaten ausweisen"
 expel_diplomats_desc:2 "#header $expel_diplomats$#!\n$TOOLTIP_DELIMITER$\nEine [concept_instant_diplomatic_action], die die [concept_relations] zum Zielland beschädigt und alle Verbesserungen der Beziehungen für die nächsten #b 5 Jahre#! unterbindet, was aber [concept_infamy] einbringt."
 expel_diplomats_action_notification_name:0 "Diplomaten ausgewiesen"
 expel_diplomats_action_notification_desc:2 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat unsere Diplomaten ausgewiesen, was unsere gegenseitigen [concept_relations] beschädigt, sodass unsere Beziehungen bei #BOLD [INITIATOR_COUNTRY.GetRelationsWithDesc(GetPlayer)]#! ([INITIATOR_COUNTRY.GetRelationsWith(GetPlayer)|+]) liegen. Seine [concept_attitude] uns gegenüber ist #tooltippable #tooltip:[INITIATOR_COUNTRY.GetTooltipTag],COUNTRY_ATTITUDE_TOOLTIP [INITIATOR_COUNTRY.GetAttitudeTowards(GetPlayer).GetName]#!#!."
 
 rivalry:0 "Rivalität"
 rivalry_action_name:0 "[concept_rivalry]"
 rivalry_action_propose_name:0 "[concept_rivalry] erklären"
 rivalry_action_break_name:0 "[concept_rivalry] beenden"
 rivalry_pact_desc:1 "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('NOM')|U] betrachtet [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('AKK')] als [Concept('concept_rivalry', 'Rivalen')]."
 rivalry_desc:0 "#header $rivalry$#!\n$TOOLTIP_DELIMITER$\nEine fortlaufende [concept_ongoing_diplomatic_action], die eine [concept_rivalry] mit einem anderen [concept_country] etabliert."
 rivalry_action_notification_name:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat [concept_rivalry] erklärt"
 rivalry_action_notification_desc:4 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat eine [concept_rivalry] zu uns erklärt. Die [concept_attitude] [INITIATOR_COUNTRY.GetAltName('VON')|U] uns gegenüber ist #tooltippable #tooltip:[INITIATOR_COUNTRY.GetTooltipTag],COUNTRY_ATTITUDE_TOOLTIP [INITIATOR_COUNTRY.GetAttitudeTowards(GetPlayer).GetName]#!#!."
 rivalry_action_notification_third_party_name:1 "[INITIATOR_COUNTRY.GetAdjectiveNoFormatting]-[TARGET_COUNTRY.GetAdjectiveNoFormatting]e [concept_rivalry] erklärt"
 rivalry_action_notification_third_party_desc:1 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat [TARGET_COUNTRY.GetAltName('AKK')|U] zum [Concept('concept_rivalry', '$concept_rivals$')] erklärt."
 rivalry_action_notification_break_name:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat [concept_rivalry] beendet"
 rivalry_action_notification_break_desc:1 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] betrachtet uns nicht länger als einen [Concept('concept_rivalry', '$concept_rivals$')]."
 rivalry_action_notification_third_party_break_name:1 "[INITIATOR_COUNTRY.GetAdjectiveNoFormatting]-[TARGET_COUNTRY.GetAdjectiveNoFormatting]e [concept_rivalry] beendet"
 rivalry_action_notification_third_party_break_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat die eigene [concept_rivalry] mit [TARGET_COUNTRY.GetAltName('DAT')] beendet."
 
 rivalry_effect_desc_global:0 "Erklärt eine [concept_rivalry]"
 rivalry_effect_desc_first:0 "[COUNTRY.GetAltNameNoFlag('NOM')|U] erklärt [TARGET_COUNTRY.GetAltName('AKK')] zum [Concept('concept_rivalry', 'Rivalen')]"
 rivalry_effect_desc_third:0 "[COUNTRY.GetAltName('NOM')|U] hat [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('AKK'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('AKK'))] zum [Concept('concept_rivalry', 'Rivalen')] erklärt"
 
 rivalry_trigger_desc_global:0 "Hat eine [concept_rivalry]"
 rivalry_trigger_false_desc_global:0 "Hat #b keine#! [concept_rivalry]"
 rivalry_trigger_desc_first:0 "[COUNTRY.GetAltNameNoFlag('NOM')|U] hat eine [concept_rivalry] mit [TARGET_COUNTRY.GetAltName('DAT')]"
 rivalry_trigger_false_desc_first:0 "[COUNTRY.GetAltNameNoFlag('NOM')|U] hat #b keine#! [concept_rivalry] mit [TARGET_COUNTRY.GetAltName('DAT')]"
 rivalry_trigger_desc_third:0 "[COUNTRY.GetAltName('NOM')|U] hat eine [concept_rivalry] mit [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('DAT'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('DAT'))]"
 rivalry_trigger_false_desc_third:0 "[COUNTRY.GetAltName('NOM')|U] hat #b keine#! [concept_rivalry] mit [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('DAT'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('DAT'))]"
 
 embargo:0 "Embargo"
 embargo_action_name:0 "[concept_embargo]"
 embargo_action_propose_name:0 "[concept_embargo]"
 embargo_action_break_name:0 "[concept_embargo] beenden"
 embargo_pact_desc:0 "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('NOM')|U] hat ein [concept_embargo] gegen [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('AKK')]."
 embargo_desc:0 "#header $embargo$#!\n$TOOLTIP_DELIMITER$\nEine [concept_ongoing_diplomatic_action], die ein anderes [concept_country] mit einem [concept_embargo] belegt."
 embargo_action_notification_name:0 "[concept_embargo]"
 embargo_action_notification_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat uns mit einem [concept_embargo] belegt. Alle [Concept('concept_trade_route', '$concept_trade_routes$')], die wir mit ihrem [concept_market] aufgebaut haben, sind nicht mehr aktiv."
 embargo_action_notification_third_party_name:0 "[concept_embargo]"
 embargo_action_notification_third_party_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat [TARGET_COUNTRY.GetAltName('AKK')] mit einem [concept_embargo] belegt."
 embargo_action_notification_break_name:0 "[concept_embargo] beendet"
 embargo_action_notification_break_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] belegt uns nicht mehr mit einem [concept_embargo]."
 embargo_action_notification_third_party_break_name:0 "[concept_embargo] beendet"
 embargo_action_notification_third_party_break_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat das eigene [concept_embargo] mit [TARGET_COUNTRY.GetAltName('DAT')] beendet."
 
 embargo_effect_desc_global:0 "Verhängt ein [concept_embargo]"
 embargo_effect_desc_first:0 "[COUNTRY.GetAltNameNoFlag('NOM')|U] beginnt damit, ein [concept_embargo] gegen [TARGET_COUNTRY.GetAltName('AKK')] zu verhängen"
 embargo_effect_desc_third:0 "[COUNTRY.GetAltName('NOM')|U] beginnt damit, ein [concept_embargo] gegen [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('AKK'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('AKK'))] zu verhängen"
 
 embargo_trigger_desc_global:0 "Hat ein [concept_embargo] verhängt"
 embargo_trigger_false_desc_global:0 "Hat #b kein#! [concept_embargo] verhängt"
 embargo_trigger_desc_first:0 "[COUNTRY.GetAltNameNoFlag('NOM')|U] hat ein [concept_embargo] gegen [TARGET_COUNTRY.GetAltName('AKK')] verhängt"
 embargo_trigger_false_desc_first:0 "[COUNTRY.GetAltNameNoFlag('NOM')|U] hat #b kein#! [concept_embargo] gegen [TARGET_COUNTRY.GetAltName('AKK')] verhängt"
 embargo_trigger_desc_third:0 "[COUNTRY.GetAltName('NOM')|U] hat ein [concept_embargo] gegen [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('AKK'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('AKK'))] verhängt"
 embargo_trigger_false_desc_third:0 "[COUNTRY.GetAltName('NOM')|U] hat #b kein#! [concept_embargo] gegen [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('AKK'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('AKK'))] verhängt"
 
 war_reparations:0 "Kriegsreparationen"
 war_reparations_action_name:0 "[concept_war_reparations]"
 war_reparations_action_propose_name:0 "[concept_war_reparations] fordern"
 war_reparations_action_break_name:0 "[concept_war_reparations] beenden"
 war_reparations_pact_desc:0 "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('NOM')|U] zahlt wöchentlich [concept_war_reparations] an [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('AKK')]."
 war_reparations_desc:0 "#header $war_reparations$#!\n$TOOLTIP_DELIMITER$\nEin [concept_diplomatic_pact], bei dem ein [concept_country] einen Teil seiner Einnahmen für eine gewisse Zeit an ein anderes zahlen muss."
 war_reparations_type_break_desc:0 "Beendet die laufende Zahlung von [concept_war_reparations] eines anderen Landes an uns."
 war_reparations_action_notification_name:0 "[concept_war_reparations] [TARGET_COUNTRY.GetAltName('GEN')]"
 war_reparations_action_notification_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat begonnen, uns [concept_war_reparations] zu bezahlen."
 war_reparations_action_notification_break_name:0 "[concept_war_reparations] beendet"
 war_reparations_action_notification_break_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unsere laufende Zahlung von [concept_war_reparations] beendet."
 
 humiliation:0 "Demütigung"
 humiliation_action_name:0 "[concept_humiliation]"
 humiliation_action_propose_name:0 "[concept_humiliation] fordern"
 humiliation_action_break_name:0 "[concept_humiliation] beenden"
 humiliation_pact_desc:1 "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('NOM')|U] wurde von [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('DAT')] [Concept('concept_humiliation', '$concept_humiliated$')|l]."
 humiliation_desc:0 "#header $humiliation$#!\n$TOOLTIP_DELIMITER$\nEin [concept_diplomatic_pact], bei dem ein [concept_country] daran gehindert wird, sich Diplomatiespielen eines anderen entgegenzustellen."
 humiliation_type_break_desc:1 "Beendet die [concept_humiliation] eines anderen Landes."
 humiliation_action_notification_name:0 "Demütigung"
 humiliation_action_notification_desc:1 "Wir haben [TARGET_COUNTRY.GetAltName('AKK')] [Concept('concept_humiliation', '$concept_humiliated$')|l]."
 humiliation_action_notification_break_name:0 "[concept_humiliation] beendet"
 humiliation_action_notification_break_desc:1 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unsere laufende [Concept('concept_humiliation', '$concept_humiliation$')] beendet."
 
 bankroll:0 "Finanzieren"
 bankroll_action_name:0 "$bankroll$"
 bankroll_action_propose_name:0 "Finanzieren beginnen"
 bankroll_action_break_name:0 "Finanzieren beenden"
 bankroll_pact_desc:0 "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('NOM')|U] finanziert [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('AKK')]."
 bankroll_desc:1 "#header $bankroll$#!\n$TOOLTIP_DELIMITER$\n[concept_bankroll_desc]"
 bankroll_action_notification_name:1 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] finanziert uns"
 bankroll_action_notification_desc:1 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat damit begonnen, unser Land jede Woche zu #v 10 %#! unseres Steuereinkommens zu finanzieren. Mit der Zeit kann dies dazu führen, dass wir [INITIATOR_COUNTRY.GetAltName('DAT')] eine [concept_obligation] schulden."
 bankroll_action_notification_break_name:1 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] finanziert uns nicht länger"
 bankroll_action_notification_break_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat die Finanzierung unseres Landes beendet."

 bankroll_effect_desc_global:0 "Beginnt mit dem [concept_bankroll]"
 bankroll_effect_desc_first:0 "[COUNTRY.GetAltNameNoFlag('NOM')|U] beginnt mit dem [concept_bankroll] [TARGET_COUNTRY.GetAltName('VON')]"
 bankroll_effect_desc_third:0 "[COUNTRY.GetAltName('NOM')|U] beginnt mit dem [concept_bankroll] [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('VON'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('VON'))]"
 
 bankroll_trigger_desc_global:0 "Hat eine [Concept('concept_bankroll', 'Finanzierung')]"
 bankroll_trigger_false_desc_global:0 "Hat #b keine#! [Concept('concept_bankroll', 'Finanzierung')]"
 bankroll_trigger_desc_first:0 "[COUNTRY.GetAltNameNoFlag('NOM')|U] [Concept('concept_bankroll', 'finanziert')] [TARGET_COUNTRY.GetAltName('AKK')]"
 bankroll_trigger_false_desc_first:0 "[COUNTRY.GetAltNameNoFlag('NOM')|U] [Concept('concept_bankroll', 'finanziert')] #b nicht#! [TARGET_COUNTRY.GetAltName('AKK')]"
 bankroll_trigger_desc_third:0 "[COUNTRY.GetAltName('NOM')|U] [Concept('concept_bankroll','finanziert')] [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('AKK'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('AKK'))]"
 bankroll_trigger_false_desc_third:0 "[COUNTRY.GetAltName('NOM')|U] [Concept('concept_bankroll','finanziert')] #b nicht#! [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('AKK'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('AKK'))]"
 
 take_on_debt:1 "Schuldenübernahme"
 take_on_debt_action_name:1 "[Concept('concept_credit', '$concept_credit_debt$')]-Übernahme"
 take_on_debt_desc:4 "#header $take_on_debt$#!\n$TOOLTIP_DELIMITER$\nEine [concept_instant_diplomatic_action], bei der ein [concept_country] die [concept_loans] eines anderen [Concept('concept_country', 'Landes')] im Austausch für eine [concept_obligation] übernimmt."
 take_on_debt_proposal_notification_name:1 "$take_on_debt_action_name$ vorgeschlagen"
 take_on_debt_proposal_notification_desc:5 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat vorgeschlagen, unsere Landes-[Concept('concept_credit', '$concept_credit_debt$')] zu übernehmen. Hoffentlich hegt man keine bösen Absichten."
 take_on_debt_proposal_notification_effects_desc:0 "$take_on_debt_desc$"
 take_on_debt_proposal_accepted_name:0 "$take_on_debt_action_name$ angenommen"
 take_on_debt_proposal_accepted_desc:1 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unseren Vorschlag akzeptiert, seine Landes-[Concept('concept_credit', '$concept_credit_debt$')] zu übernehmen."
 take_on_debt_proposal_declined_name:0 "$take_on_debt_action_name$ abgelehnt"
 take_on_debt_proposal_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unseren Vorschlag abgelehnt, seine Landes-[Concept('concept_credit', '$concept_credit_debt$')] zu übernehmen."
 take_on_debt_proposal_third_party_accepted_name:1 "$take_on_debt_action_name$ angenommen"
 take_on_debt_proposal_third_party_accepted_desc:2 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat Landes-[Concept('concept_credit', '$concept_credit_debt$')] [TARGET_COUNTRY.GetAltName('GEN')] abbezahlt. Deshalb schuldet es ihm nun eine [concept_obligation]."
 take_on_debt_proposal_third_party_declined_name:0 "$take_on_debt_action_name$ abgelehnt"
 take_on_debt_proposal_third_party_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat den Vorschlag [INITIATOR_COUNTRY.GetAltName('GEN')] abgelehnt, seine Landes-[Concept('concept_credit', '$concept_credit_debt$')] zu übernehmen."
 
 customs_union:0 "Zollunion"
 customs_union_action_name:0 "[concept_customs_union]"
 customs_union_action_propose_name:0 "In [concept_customs_union] einladen"
 customs_union_action_break_name:0 "[concept_customs_union] beenden"
 customs_union_action_notification_name:0 "[concept_customs_union] mit [INITIATOR_COUNTRY.GetAltName('DAT')]"
 customs_union_action_notification_desc:0 "Wir sind eine [concept_customs_union] mit [INITIATOR_COUNTRY.GetAltName('DAT')] eingegangen."
 customs_union_desc:1 "#header $customs_union$#!\n$TOOLTIP_DELIMITER$\nEin [concept_diplomatic_pact], der eine [concept_customs_union] zwischen zwei [Concept('concept_country', 'Ländern')] schafft."
 customs_union_pact_desc:0 "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('NOM')|U] ist der [concept_senior_partner] in einer [concept_customs_union] mit [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('DAT')]."
 customs_union_proposal_notification_name:0 "[concept_customs_union] vorgeschlagen"
 customs_union_proposal_notification_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] möchte, dass wir seiner #variable [concept_customs_union]#! beitreten."
 customs_union_proposal_notification_effects_desc:0 "$customs_union_desc$"
 customs_union_proposal_accepted_name:0 "[concept_customs_union] angenommen"
 customs_union_proposal_accepted_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unseren Vorschlag für eine #variable [concept_customs_union]#! angenommen."
 customs_union_proposal_declined_name:0 "[concept_customs_union] abgelehnt"
 customs_union_proposal_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unseren Vorschlag für eine #variable [concept_customs_union]#! abgelehnt."
 customs_union_action_notification_break_name:0 "[concept_customs_union] mit [INITIATOR_COUNTRY.GetAltName('DAT')] gebrochen"
 customs_union_action_notification_break_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat die #variable [concept_customs_union]#! mit uns gebrochen."
 customs_union_proposal_third_party_accepted_name:0 "[concept_customs_union] beigetreten"
 customs_union_proposal_third_party_accepted_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] ist einer [concept_customs_union] mit [INITIATOR_COUNTRY.GetAltName('DAT')] beigetreten."
 customs_union_proposal_third_party_declined_name:0 "[concept_customs_union] verweigert"
 customs_union_proposal_third_party_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat eine #variable [concept_customs_union]#! mit [INITIATOR_COUNTRY.GetAltName('DAT')] verweigert."
 customs_union_action_notification_third_party_break_name:0 "[concept_customs_union] gebrochen"
 customs_union_action_notification_third_party_break_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat die #variable [concept_customs_union]#! mit [TARGET_COUNTRY.GetAltName('DAT')] gebrochen."
 
 customs_union_effect_desc_global:0 "Tritt einer [concept_customs_union] bei"
 customs_union_effect_desc_first:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] tritt einer [concept_customs_union] unter [COUNTRY.GetAltName('DAT')] bei"
 customs_union_effect_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM')|U)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM')|U)] tritt einer [concept_customs_union] unter [COUNTRY.GetAltName('DAT')] bei"
 
 customs_union_trigger_desc_global:0 "Ist in einer [concept_customs_union]"
 customs_union_trigger_false_desc_global:0 "Ist in #b keiner#! [concept_customs_union]"
 customs_union_trigger_desc_first:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] ist in einer [concept_customs_union] unter [COUNTRY.GetAltNameNoFlag('DAT')] "
 customs_union_trigger_false_desc_first:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] ist #b nicht#! in einer [concept_customs_union] unter [COUNTRY.GetAltNameNoFlag('DAT')] "
 customs_union_trigger_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM')|U)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM')|U)] ist in einer [concept_customs_union] unter [COUNTRY.GetAltName('DAT')]"
 customs_union_trigger_false_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM')|U)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM')|U)] ist #b nicht#! in einer [concept_customs_union] unter [COUNTRY.GetAltName('DAT')]"
 
 join_customs_union:0 "Zollunion beitreten"
 join_customs_union_action_name:0 "[concept_customs_union] beitreten"
 join_customs_union_desc:1 "#header $join_customs_union$#!\n$TOOLTIP_DELIMITER$\nEin [concept_diplomatic_pact], der eine [concept_customs_union] zwischen zwei [Concept('concept_country', 'Ländern')] schafft, wobei das vorschlagende Land der Juniorpartner ist."
 join_customs_union_proposal_notification_name:0 "Anfrage zum Beitritt zu einer [concept_customs_union]"
 join_customs_union_proposal_notification_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] möchte unserer #variable [concept_customs_union]#! beitreten."
 join_customs_union_proposal_notification_effects_desc:0 "Wenn wir annehmen, können seine Staaten unserem Markt beitreten."
 join_customs_union_proposal_accepted_name:0 "Anfrage für eine [concept_customs_union] angenommen"
 join_customs_union_proposal_accepted_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] akzeptiert unser Angebot, seiner #variable [concept_customs_union]#! beizutreten."
 join_customs_union_proposal_declined_name:0 "Anfrage für eine [concept_customs_union] abgelehnt"
 join_customs_union_proposal_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unser Angebot, seiner #variable [concept_customs_union]#! beizutreten, abgelehnt."
 join_customs_union_proposal_third_party_accepted_name:0 "[concept_customs_union] beigetreten"
 join_customs_union_proposal_third_party_accepted_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] ist einer [concept_customs_union] mit [TARGET_COUNTRY.GetAltName('DAT')] beigetreten."
 join_customs_union_proposal_third_party_declined_name:0 "[concept_customs_union] verweigert"
 join_customs_union_proposal_third_party_declined_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat eine #variable [concept_customs_union]#! mit [TARGET_COUNTRY.GetAltName('DAT')] verweigert."

 change_customs_union:0 "Zu unserer Zollunion wechseln"
 change_customs_union_action_name:0 "Zu unserer [concept_customs_union] wechseln"
 change_customs_union_desc:0 "#header $change_customs_union$#!\n$TOOLTIP_DELIMITER$\nEin [concept_diplomatic_pact], der eine [concept_customs_union] zwischen zwei [Concept('concept_country', 'Ländern')] schafft und bei der der Empfänger seine derzeitige [customs_union] infolgedessen verlässt."
 change_customs_union_proposal_notification_name:0 "Wechsel der [concept_customs_union] anbieten"
 change_customs_union_proposal_notification_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] möchte, dass wir zu seiner #variable [concept_customs_union]#! wechseln."
 change_customs_union_proposal_notification_effects_desc:0 "Wenn wir zustimmen, verlassen wir unsere derzeitige [concept_customs_union] und treten dem Markt „[INITIATOR_COUNTRY.GetCapital.GetMarket.GetName]“ bei"
 change_customs_union_proposal_accepted_name:0 "Anfrage für einen Wechsel zu unserer Zollunion akzeptiert"
 change_customs_union_proposal_accepted_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unser Angebot angenommen, zu unserer #variable [concept_customs_union]#! zu wechseln."
 change_customs_union_proposal_declined_name:0 "Anfrage für einen Wechsel zu unserer Zollunion abgelehnt"
 change_customs_union_proposal_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unser Angebot abgelehnt, zu unserer #variable [concept_customs_union]#! zu wechseln."
 change_customs_union_proposal_third_party_accepted_name:0 "Wechsel zu unserer Zollunion akzeptiert"
 change_customs_union_proposal_third_party_accepted_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] ist zur [concept_customs_union] [INITIATOR_COUNTRY.GetAltName('VON')] gewechselt."
 change_customs_union_proposal_third_party_declined_name:0 "Wechsel zu unserer Zollunion abgelehnt"
 change_customs_union_proposal_third_party_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] weigerte sich, zur [concept_customs_union] [INITIATOR_COUNTRY.GetAltName('VON')] zu wechseln."
 
 alliance:0 "Bündnis"
 alliance_action_name:0 "[concept_alliance]"
 alliance_action_propose_name:0 "[concept_alliance] bilden"
 alliance_action_break_name:0 "[concept_alliance] beenden"
 alliance_action_notification_name:0 "[concept_alliance] mit [INITIATOR_COUNTRY.GetAltName('DAT')]"
 alliance_action_notification_desc:0 "Wir sind ein [concept_alliance] mit [INITIATOR_COUNTRY.GetAltName('DAT')] eingegangen."
 alliance_desc:1 "#header $alliance$#!\n$TOOLTIP_DELIMITER$\nEin [concept_diplomatic_pact], der ein [concept_alliance] zwischen zwei [Concept('concept_country', 'Ländern')] schafft."
 alliance_pact_desc:0 "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('NOM')|U] und [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('NOM')] haben ein [concept_alliance]."
 alliance_proposal_notification_name:0 "[concept_alliance] vorgeschlagen"
 alliance_proposal_notification_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] möchte ein [concept_alliance] mit uns eingehen."
 alliance_proposal_notification_effects_desc:0 "$alliance_desc$"
 alliance_proposal_accepted_name:0 "[concept_alliance] angenommen"
 alliance_proposal_accepted_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unseren Vorschlag für ein [concept_alliance] angenommen."
 alliance_proposal_declined_name:0 "[concept_alliance] abgelehnt"
 alliance_proposal_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unseren Vorschlag für ein [concept_alliance] abgelehnt."
 alliance_action_notification_break_name:0 "[concept_alliance] mit [INITIATOR_COUNTRY.GetAltName('DAT')] gebrochen"
 alliance_action_notification_break_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat sein [concept_alliance] mit uns gebrochen."
 alliance_proposal_third_party_accepted_name:0 "[concept_alliance] besiegelt"
 alliance_proposal_third_party_accepted_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] ist ein [concept_alliance] mit [TARGET_COUNTRY.GetAltName('DAT')] eingegangen."
 alliance_proposal_third_party_declined_name:0 "[concept_alliance] abgelehnt"
 alliance_proposal_third_party_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat ein [concept_alliance] mit [INITIATOR_COUNTRY.GetAltName('DAT')] verweigert."
 alliance_action_notification_third_party_break_name:0 "[concept_alliance] gebrochen"
 alliance_action_notification_third_party_break_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat das [concept_alliance] mit [TARGET_COUNTRY.GetAltName('DAT')] gebrochen."
 
 alliance_effect_desc_global:0 "Beitritt zu einem [concept_alliance]"
 alliance_effect_desc_first:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] geht ein [concept_alliance] mit [COUNTRY.GetAltNameNoFlag('DAT')] ein"
 alliance_effect_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM')|U)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM')|U)] geht ein [concept_alliance] mit [COUNTRY.GetAltName('DAT')] ein"
 
 alliance_trigger_desc_global:0 "Ist in einem [concept_alliance]"
 alliance_trigger_false_desc_global:0 "Ist #b nicht#! in einem [concept_alliance]"
 alliance_trigger_desc_first:0 "[TARGET_COUNTRY.GetAltName('NOM')] ist in einem [concept_alliance] mit [COUNTRY.GetAltNameNoFlag('DAT')]"
 alliance_trigger_false_desc_first:0 "[TARGET_COUNTRY.GetAltName('NOM')] ist #b nicht#! in einem [concept_alliance] mit [COUNTRY.GetAltNameNoFlag('DAT')]"
 alliance_trigger_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM')|U)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM')|U)] ist in einem [concept_alliance] mit [COUNTRY.GetAltName('DAT')]"
 alliance_trigger_false_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM')|U)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM')|U)] ist #b nicht#! in einem [concept_alliance] mit [COUNTRY.GetAltName('DAT')]"
 
 defensive_pact:0 "Verteidigungspakt"
 defensive_pact_action_name:0 "[concept_defensive_pact]"
 defensive_pact_action_propose_name:0 "[concept_defensive_pact] bilden"
 defensive_pact_action_break_name:0 "[concept_defensive_pact] beenden"
 defensive_pact_action_notification_name:0 "[concept_defensive_pact] mit [INITIATOR_COUNTRY.GetAltName('DAT')]"
 defensive_pact_action_notification_desc:0 "Wir sind einen [concept_defensive_pact] mit [INITIATOR_COUNTRY.GetAltName('DAT')] eingegangen."
 defensive_pact_desc:1 "#header $defensive_pact$#!\n$TOOLTIP_DELIMITER$\nEin [concept_diplomatic_pact], der einen [concept_defensive_pact] zwischen zwei [Concept('concept_country', 'Ländern')] schafft."
 defensive_pact_pact_desc:0 "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('NOM')|U] und [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('NOM')] haben einen [concept_defensive_pact]."
 defensive_pact_proposal_notification_name:0 "[concept_defensive_pact] vorgeschlagen"
 defensive_pact_proposal_notification_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] möchte einen [concept_defensive_pact] mit uns eingehen."
 defensive_pact_proposal_notification_effects_desc:0 "$defensive_pact_desc$"
 defensive_pact_proposal_accepted_name:0 "[concept_defensive_pact] angenommen"
 defensive_pact_proposal_accepted_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unseren Vorschlag für einen [concept_defensive_pact] angenommen."
 defensive_pact_proposal_declined_name:0 "[concept_defensive_pact] abgelehnt"
 defensive_pact_proposal_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unseren Vorschlag für einen [concept_defensive_pact] abgelehnt."
 defensive_pact_action_notification_break_name:0 "[concept_defensive_pact] mit [INITIATOR_COUNTRY.GetAltName('DAT')] gebrochen"
 defensive_pact_action_notification_break_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat seinen [concept_defensive_pact] mit uns gebrochen."
 defensive_pact_proposal_third_party_accepted_name:0 "[concept_defensive_pact] unterschrieben"
 defensive_pact_proposal_third_party_accepted_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] ist einen [concept_defensive_pact] mit [TARGET_COUNTRY.GetAltName('DAT')] eingegangen."
 defensive_pact_proposal_third_party_declined_name:0 "[concept_defensive_pact] zurückgewiesen"
 defensive_pact_proposal_third_party_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat einen [concept_defensive_pact] mit [INITIATOR_COUNTRY.GetAltName('DAT')] verweigert."
 defensive_pact_action_notification_third_party_break_name:0 "[concept_defensive_pact] gebrochen"
 defensive_pact_action_notification_third_party_break_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat den [concept_defensive_pact] mit [TARGET_COUNTRY.GetAltName('DAT')] gebrochen."
 
 defensive_pact_effect_desc_global:0 "Tritt einem [concept_defensive_pact] bei"
 defensive_pact_effect_desc_first:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] geht einen [concept_defensive_pact] mit [COUNTRY.GetAltNameNoFlag('DAT')] ein"
 defensive_pact_effect_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM')|U)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM')|U)] geht einen [concept_defensive_pact] mit [COUNTRY.GetAltName('DAT')] ein"
 
 defensive_pact_trigger_desc_global:0 "Ist in einem [concept_defensive_pact]"
 defensive_pact_trigger_false_desc_global:0 "Ist #b nicht#! in einem [concept_defensive_pact]"
 defensive_pact_trigger_desc_first:0 "[TARGET_COUNTRY.GetCustom('NOM')|U] hat einen [concept_defensive_pact] mit [COUNTRY.GetAltNameNoFlag('DAT')]"
 defensive_pact_trigger_false_desc_first:0 "[TARGET_COUNTRY.GetCustom('NOM')|U] hat #b keinen#! [concept_defensive_pact] mit [COUNTRY.GetAltNameNoFlag('DAT')]"
 defensive_pact_trigger_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM')|U)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM')|U)] hat einen [concept_defensive_pact] mit [COUNTRY.GetAltName('DAT')]"
 defensive_pact_trigger_false_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM')|U)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM')|U)] hat #b keinen#! [concept_defensive_pact] mit [COUNTRY.GetAltName('DAT')]"
 
 trade_agreement:0 "Handelsvertrag"
 trade_agreement_action_name:0 "[concept_trade_agreement]"
 trade_agreement_action_propose_name:0 "[concept_trade_agreement] vorschlagen"
 trade_agreement_action_break_name:0 "[concept_trade_agreement] beenden"
 trade_agreement_action_notification_name:0 "[concept_trade_agreement] beschlossen"
 trade_agreement_action_notification_desc:0 "Wir sind einen [concept_trade_agreement] mit [INITIATOR_COUNTRY.GetAltName('DAT')] eingegangen."
 trade_agreement_desc:1 "#header $trade_agreement$#!\n$TOOLTIP_DELIMITER$\nEin [concept_diplomatic_pact], der einen [concept_trade_agreement] zwischen zwei [Concept('concept_country', 'Ländern')] beschließt."
 trade_agreement_pact_desc:0 "[SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('NOM')|U] und [SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('NOM')] haben einen [concept_trade_agreement]."
 trade_agreement_proposal_notification_name:0 "[concept_trade_agreement] vorgeschlagen"
 trade_agreement_proposal_notification_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] möchte einen [concept_trade_agreement] mit uns eingehen."
 trade_agreement_proposal_notification_effects_desc:0 "$trade_agreement_desc$"
 trade_agreement_proposal_accepted_name:0 "[concept_trade_agreement] angenommen"
 trade_agreement_proposal_accepted_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unseren Vorschlag für einen [concept_trade_agreement] angenommen."
 trade_agreement_proposal_declined_name:0 "[concept_trade_agreement] abgelehnt"
 trade_agreement_proposal_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unseren Vorschlag für einen [concept_trade_agreement] abgelehnt."
 trade_agreement_action_notification_break_name:0 "[concept_trade_agreement] gebrochen"
 trade_agreement_action_notification_break_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat seinen [concept_trade_agreement] mit uns gebrochen."
 trade_agreement_proposal_third_party_accepted_name:0 "[concept_trade_agreement] unterzeichnet"
 trade_agreement_proposal_third_party_accepted_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] ist einen [concept_trade_agreement] mit [TARGET_COUNTRY.GetAltName('DAT')] eingegangen."
 trade_agreement_proposal_third_party_declined_name:0 "[concept_trade_agreement] abgelehnt"
 trade_agreement_proposal_third_party_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat einen [concept_trade_agreement] mit [INITIATOR_COUNTRY.GetAltName('DAT')] verweigert."
 trade_agreement_action_notification_third_party_break_name:0 "[concept_trade_agreement] gebrochen"
 trade_agreement_action_notification_third_party_break_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat den [concept_trade_agreement] mit [TARGET_COUNTRY.GetAltName('DAT')] gebrochen."

 trade_agreement_effect_desc_global:0 "Geht einen [concept_trade_agreement] ein"
 trade_agreement_effect_desc_first:0 "[COUNTRY.GetAltNameNoFlag('NOM')] geht einen [concept_trade_agreement] mit [TARGET_COUNTRY.GetAltName('DAT')] ein"
 trade_agreement_effect_desc_third:0 "[COUNTRY.GetAltName('NOM')|U] geht einen [concept_trade_agreement] mit [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('DAT'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('DAT'))] ein"
 
 trade_agreement_trigger_desc_global:0 "Hat einen [concept_trade_agreement]"
 trade_agreement_trigger_false_desc_global:0 "Hat #b keinen#! [concept_trade_agreement]"
 trade_agreement_trigger_desc_first:0 "[COUNTRY.GetAltNameNoFlag('NOM')] hat einen [concept_trade_agreement] mit [TARGET_COUNTRY.GetAltName('DAT')]"
 trade_agreement_trigger_false_desc_first:0 "[COUNTRY.GetAltNameNoFlag('NOM')] hat #b keinen#! [concept_trade_agreement] mit [TARGET_COUNTRY.GetAltName('DAT')]"
 trade_agreement_trigger_desc_third:0 "[COUNTRY.GetAltName('NOM')|U] hat einen [concept_trade_agreement] mit [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('DAT'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('DAT'))]"
 trade_agreement_trigger_false_desc_third:0 "[COUNTRY.GetAltName('NOM')|U] hat #b keinen#! [concept_trade_agreement] mit [AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('DAT'))][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('DAT'))]"
 
 protectorate:0 "Protektorat"
 protectorate_action_name:0 "[concept_protectorate]"
 protectorate_action_propose_name:0 "Zum [concept_protectorate] machen"
 protectorate_action_break_name:0 "Unabhängigkeit gewähren"
 protectorate_action_ask_to_break_name:0 "Unabhängigkeit fordern"
 protectorate_desc:1 "#header $protectorate$#!\n$TOOLTIP_DELIMITER$\nEin [concept_diplomatic_pact], der eine [concept_subject]-Beziehung vom Typ „[concept_protectorate]“ zwischen zwei [Concept('concept_country', 'Ländern')] schafft."
 protectorate_pact_desc:0 "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('NOM')|U] ist ein [concept_protectorate] [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('GEN')]."
 protectorate_proposal_notification_name:0 "Unterwerfung verlangt"
 protectorate_proposal_notification_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] fordert, dass wir uns ihm unterwerfen und sein [concept_protectorate] werden."
 protectorate_proposal_notification_effects_desc:0 "Wenn wir annehmen, werden wir sein Klientelland."
 protectorate_proposal_accepted_name:0 "Unterwerfung verlangt"
 protectorate_proposal_accepted_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung angenommen, unser [concept_protectorate] zu werden."
 protectorate_proposal_declined_name:0 "Unterwerfung verweigert"
 protectorate_proposal_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung abgelehnt, unser [concept_protectorate] zu werden."
 protectorate_action_notification_break_name:0 "Unabhängigkeit gewährt"
 protectorate_action_notification_break_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat unseren Status als [concept_protectorate] beendet. Wir sind wieder unabhängig."
 protectorate_proposal_notification_break_name:0 "Unabhängigkeit gefordert"
 protectorate_proposal_notification_break_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] verlangt, dass wir seinen Status als [concept_protectorate] beenden."
 protectorate_proposal_notification_break_effects_desc:0 "Wenn wir annehmen, wird es wieder voll unabhängig."
 protectorate_proposal_break_accepted_name:0 "Unabhängigkeit gewährt"
 protectorate_proposal_break_accepted_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung angenommen, unseren Status als [concept_protectorate] zu beenden. Wir sind wieder unabhängig."
 protectorate_proposal_break_declined_name:0 "Unabhängigkeit verweigert"
 protectorate_proposal_break_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung verweigert, unseren Status als [concept_protectorate] zu beenden."
 protectorate_proposal_third_party_accepted_name:0 "Land unterworfen"
 protectorate_proposal_third_party_accepted_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat eingewilligt, ein [concept_protectorate] [INITIATOR_COUNTRY.GetAltName('GEN')] zu werden."
 protectorate_proposal_third_party_declined_name:0 "Unterwerfung verweigert"
 protectorate_proposal_third_party_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat verweigert, ein [concept_protectorate] [INITIATOR_COUNTRY.GetAltName('GEN')] zu werden."
 protectorate_action_third_party_notification_break_name:0 "Unabhängigkeit gewährt"
 protectorate_action_third_party_notification_break_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat den Status [TARGET_COUNTRY.GetAltName('GEN')] als [concept_protectorate] beendet, sodass es seine volle Unabhängigkeit zurückhat."
 protectorate_proposal_third_party_break_accepted_name:0 "Unabhängigkeit gewährt"
 protectorate_proposal_third_party_break_accepted_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat den Status [INITIATOR_COUNTRY.GetAltName('GEN')] als [concept_protectorate] beendet, sodass es seine volle Unabhängigkeit zurückhat."
 protectorate_proposal_third_party_break_declined_name:0 "Unabhängigkeit verweigert"
 protectorate_proposal_third_party_break_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat verweigert, den Status [INITIATOR_COUNTRY.GetAltName('GEN')] als [concept_protectorate] zu beenden."
  
 protectorate_effect_desc_global:0 "Wird ein [concept_protectorate]"
 protectorate_effect_desc_first:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] wird ein [COUNTRY.GetAdjectiveNoFlag|l]es [concept_protectorate]"
 protectorate_effect_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM')|U)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM')|U)] wird ein [concept_protectorate] [COUNTRY.GetAltName('VON')]"
 
 protectorate_trigger_desc_global:0 "Ist ein [concept_protectorate]"
 protectorate_trigger_false_desc_global:0 "Ist #b kein#! [concept_protectorate]"
 protectorate_trigger_desc_first:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] ist ein [COUNTRY.GetAdjectiveNoFlag|l]es [concept_protectorate]"
 protectorate_trigger_false_desc_first:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] ist #b kein#! [COUNTRY.GetAdjectiveNoFlag|l]es [concept_protectorate]"
 protectorate_trigger_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM')|U)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM')|U)] ist ein [concept_protectorate] [COUNTRY.GetAltName('VON')]"
 protectorate_trigger_false_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM')|U)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM')|U)] ist #b kein#! [concept_protectorate] [COUNTRY.GetAltName('VON')]"
 
 become_protectorate:0 "Bitten, ein Protektorat zu werden"
 become_protectorate_action_name:0 "Bitten, ein [concept_protectorate] zu werden"
 become_protectorate_desc:1 "#header $become_protectorate$#!\n$TOOLTIP_DELIMITER$\nEin [concept_diplomatic_pact], der eine [concept_subject]-Beziehung vom Typ „[concept_protectorate]“ zwischen zwei [Concept('concept_country', 'Ländern')] schafft, wobei das vorschlagende Land das [concept_subject] wird."
 become_protectorate_proposal_notification_name:0 "Bitte um Status als [concept_protectorate]"
 become_protectorate_proposal_notification_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] will sich uns unterwerfen und unser [concept_protectorate] werden."
 become_protectorate_proposal_notification_effects_desc:0 "Wenn wir annehmen, wird es unser Klientelland."
 become_protectorate_proposal_accepted_name:0 "Bitte um Status als [concept_protectorate] angenommen"
 become_protectorate_proposal_accepted_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] akzeptiert unser Angebot, sein [concept_protectorate] zu werden."
 become_protectorate_proposal_declined_name:0 "Bitte um Status als [concept_protectorate] abgelehnt"
 become_protectorate_proposal_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unser Angebot abgelehnt, sein [concept_protectorate] zu werden."
 become_protectorate_proposal_third_party_accepted_name:0 "Land unterworfen"
 become_protectorate_proposal_third_party_accepted_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat eingewilligt, der Suzerän [INITIATOR_COUNTRY.GetAltName('GEN')] zu werden, das nun sein [concept_protectorate] ist."
 become_protectorate_proposal_third_party_declined_name:0 "Unterwerfung verweigert"
 become_protectorate_proposal_third_party_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat abgelehnt, der $suzerain$ [INITIATOR_COUNTRY.GetAltName('GEN')] zu werden."

 puppet:0 "Marionette"
 puppet_action_name:0 "[concept_puppet]"
 puppet_action_propose_name:0 "Zur [concept_puppet] machen"
 puppet_action_break_name:0 "Unabhängigkeit gewähren"
 puppet_action_ask_to_break_name:0 "Unabhängigkeit fordern"
 puppet_desc:1 "#header $puppet$#!\n$TOOLTIP_DELIMITER$\nEin [concept_diplomatic_pact], der eine [concept_subject]-Beziehung vom Typ „[concept_puppet]“ zwischen zwei [Concept('concept_country', 'Ländern')] schafft."
 puppet_pact_desc:0 "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('NOM')|U] ist eine [concept_puppet] von [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('DAT')]."
 puppet_action_notification_name:0 "Forderung, zur [concept_puppet] zu werden"
 puppet_action_notification_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] fordert, dass wir uns ihm unterwerfen und seine [concept_puppet] werden."
 puppet_action_notification_break_name:0 "Unabhängigkeit gewährt"
 puppet_action_notification_break_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat unseren Status als [concept_puppet] beendet. Wir sind wieder unabhängig."
 puppet_proposal_notification_break_name:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] fordert Unabhängigkeit"
 puppet_proposal_notification_break_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] verlangt, dass wir unsere gemeinsame [Concept('concept_puppet', 'Marionettenbeziehung')] aufgeben."
 puppet_proposal_notification_break_effects_desc:0 "Wenn wir annehmen, wird es wieder voll unabhängig."
 puppet_proposal_break_accepted_name:0 "Unabhängigkeit gewährt"
 puppet_proposal_break_accepted_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung angenommen, unseren Status als [concept_puppet] zu beenden. Wir sind wieder unabhängig."
 puppet_proposal_break_declined_name:0 "Unabhängigkeit verweigert"
 puppet_proposal_break_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung verweigert, unseren Status als [concept_puppet] zu beenden."
 puppet_proposal_third_party_break_accepted_name:0 "Unabhängigkeit gewährt"
 puppet_proposal_third_party_break_accepted_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat den Status [INITIATOR_COUNTRY.GetAltName('GEN')] als [concept_puppet] beendet, sodass es seine volle Unabhängigkeit zurückhat."
 puppet_proposal_third_party_break_declined_name:0 "Unabhängigkeit verweigert"
 puppet_proposal_third_party_break_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat verweigert, den Status von [INITIATOR_COUNTRY.GetAltName('DAT')] als [concept_puppet] zu beenden."
 
 puppet_effect_desc_global:0 "Wird eine [concept_puppet]"
 puppet_effect_desc_first:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] wird eine [COUNTRY.GetAdjectiveNoFlag|l]e [concept_puppet]"
 puppet_effect_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM')|U)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM')|U)] wird eine [concept_puppet] [COUNTRY.GetAltName('VON')]"
 
 puppet_trigger_desc_global:0 "Ist eine [concept_puppet]"
 puppet_trigger_false_desc_global:0 "Ist #b keine#! [concept_puppet]"
 puppet_trigger_desc_first:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] ist eine [COUNTRY.GetAdjectiveNoFlag|l]e [concept_puppet]"
 puppet_trigger_false_desc_first:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] ist #b keine#! [COUNTRY.GetAdjectiveNoFlag|l]e [concept_puppet]"
 puppet_trigger_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM')|U)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM')|U)] ist eine [concept_puppet] [COUNTRY.GetAltName('VON')]"
 puppet_trigger_false_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM')|U)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM')|U)] ist #b keine#! [concept_puppet] [COUNTRY.GetAltName('VON')]"
 
 tributary:0 "Tributgeber"
 tributary_action_name:0 "[concept_tributary]"
 tributary_action_propose_name:0 "Zum [concept_tributary] machen"
 tributary_action_break_name:0 "Unabhängigkeit gewähren"
 tributary_action_ask_to_break_name:0 "Unabhängigkeit fordern"
 tributary_desc:1 "#header $tributary$#!\n$TOOLTIP_DELIMITER$\nEin [concept_diplomatic_pact], der eine [concept_subject]-Beziehung vom Typ „[concept_tributary]“ zwischen zwei [Concept('concept_country', 'Ländern')] schafft."
 tributary_pact_desc:0 "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('NOM')|U] ist ein [concept_tributary] von [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('DAT')]."
 tributary_proposal_notification_name:0 "Unterwerfung verlangt"
 tributary_proposal_notification_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] fordert, dass wir uns ihm unterwerfen und sein [concept_tributary] werden."
 tributary_proposal_notification_effects_desc:0 "Wenn wir annehmen, werden wir sein Klientelland."
 tributary_proposal_accepted_name:0 "Unterwerfung angenommen"
 tributary_proposal_accepted_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung angenommen, unser [concept_tributary] zu werden."
 tributary_proposal_declined_name:0 "Unterwerfung verweigert"
 tributary_proposal_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung abgelehnt, unser [concept_tributary] zu werden."
 tributary_action_notification_break_name:0 "Unabhängigkeit gewährt"
 tributary_action_notification_break_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat unseren Status als [concept_tributary] beendet. Wir sind wieder unabhängig."
 tributary_proposal_notification_break_name:0 "Unabhängigkeit gefordert"
 tributary_proposal_notification_break_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] verlangt, dass wir seinen Status als [concept_tributary] beenden."
 tributary_proposal_notification_break_effects_desc:0 "Wenn wir annehmen, wird es wieder voll unabhängig."
 tributary_proposal_break_accepted_name:0 "Unabhängigkeit gewährt"
 tributary_proposal_break_accepted_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung angenommen, unseren Status als [concept_tributary] zu beenden. Wir sind wieder unabhängig."
 tributary_proposal_break_declined_name:0 "Unabhängigkeit verweigert"
 tributary_proposal_break_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung verweigert, unseren Status als [concept_tributary] zu beenden."
 tributary_proposal_third_party_accepted_name:0 "Land unterworfen"
 tributary_proposal_third_party_accepted_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat eingewilligt, ein [concept_tributary] [INITIATOR_COUNTRY.GetAltName('GEN')] zu werden."
 tributary_proposal_third_party_declined_name:0 "Unterwerfung verweigert"
 tributary_proposal_third_party_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat verweigert, ein [concept_tributary] [INITIATOR_COUNTRY.GetAltName('GEN')] zu werden."
 tributary_action_third_party_notification_break_name:0 "Unabhängigkeit gewährt"
 tributary_action_third_party_notification_break_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat den Status [TARGET_COUNTRY.GetAltName('GEN')] als [concept_tributary] beendet, sodass es seine volle Unabhängigkeit zurückhat."
 tributary_proposal_third_party_break_accepted_name:0 "Unabhängigkeit gewährt"
 tributary_proposal_third_party_break_accepted_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat den Status [INITIATOR_COUNTRY.GetAltName('GEN')] als [concept_tributary] beendet, sodass es seine volle Unabhängigkeit zurückhat."
 tributary_proposal_third_party_break_declined_name:0 "Unabhängigkeit verweigert"
 tributary_proposal_third_party_break_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat verweigert, den Status [INITIATOR_COUNTRY.GetAltName('GEN')] als [concept_tributary] zu beenden."
  
 tributary_effect_desc_global:0 "Wird ein [concept_tributary]"
 tributary_effect_desc_first:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] wird ein [COUNTRY.GetAdjectiveNoFlag|l]er [concept_tributary]"
 tributary_effect_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM')|U)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM')|U)] wird ein [concept_tributary] [COUNTRY.GetAltName('VON')]"
 
 tributary_trigger_desc_global:0 "Ist ein [concept_tributary]"
 tributary_trigger_false_desc_global:0 "Ist #b kein#! [concept_tributary]"
 tributary_trigger_desc_first:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] ist ein [COUNTRY.GetAdjectiveNoFlag|l]er [concept_tributary]"
 tributary_trigger_false_desc_first:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] ist #b kein#! [COUNTRY.GetAdjectiveNoFlag|l]er [concept_tributary]"
 tributary_trigger_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM')|U)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM')|U)] ist ein [concept_tributary] [COUNTRY.GetAltName('VON')]"
 tributary_trigger_false_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM')|U)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM')|U)] ist #b kein#! [concept_tributary] [COUNTRY.GetAltName('VON')]"
  
 become_tributary:0 "Bitten, ein Tributgeber zu werden"
 become_tributary_action_name:0 "Bitten, ein [concept_tributary] zu werden"
 become_tributary_desc:2 "#header $become_tributary$#!\n$TOOLTIP_DELIMITER$\nEin [concept_diplomatic_pact], der eine [concept_subject]-Beziehung vom Typ „[concept_tributary]“ zwischen zwei [Concept('concept_country', 'Ländern')] schafft, wobei das vorschlagende Land das [concept_subject] wird."
 become_tributary_proposal_notification_name:0 "[concept_tributary]-Anfrage"
 become_tributary_proposal_notification_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] will sich uns unterwerfen und unser [concept_tributary] werden."
 become_tributary_proposal_notification_effects_desc:0 "Wenn wir annehmen, wird es unser Klientelland."
 become_tributary_proposal_accepted_name:0 "[concept_tributary]-Anfrage angenommen"
 become_tributary_proposal_accepted_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] akzeptiert unser Angebot, sein [concept_tributary] zu werden."
 become_tributary_proposal_declined_name:0 "[concept_tributary]-Anfrage abgelehnt"
 become_tributary_proposal_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unser Angebot abgelehnt, sein [concept_tributary] zu werden."
 become_tributary_proposal_third_party_accepted_name:0 "Land unterworfen"
 become_tributary_proposal_third_party_accepted_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat eingewilligt, der Suzerän [INITIATOR_COUNTRY.GetAltName('GEN')] zu werden, das nun sein [concept_tributary] ist."
 become_tributary_proposal_third_party_declined_name:0 "Unterwerfung verweigert"
 become_tributary_proposal_third_party_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat abgelehnt, der $suzerain$ [INITIATOR_COUNTRY.GetAltName('GEN')] zu werden."

 vassal:0 "Vasall"
 vassal_action_name:0 "[concept_vassal]"
 vassal_action_propose_name:0 "Zum [concept_vassal] machen"
 vassal_action_break_name:0 "Unabhängigkeit gewähren"
 vassal_action_ask_to_break_name:0 "Unabhängigkeit fordern"
 vassal_desc:1 "#header $vassal$#!\n$TOOLTIP_DELIMITER$\nEin [concept_diplomatic_pact], der eine [concept_subject]-Beziehung vom Typ „[concept_vassal]“ zwischen zwei [Concept('concept_country', 'Ländern')] schafft."
 vassal_pact_desc:0 "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('NOM')|U] ist ein [concept_vassal] [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('GEN')]."
 vassal_action_notification_name:0 "Forderung, zum [concept_vassal] zu werden"
 vassal_action_notification_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] fordert, dass wir uns ihm unterwerfen und sein [concept_vassal] werden."
 vassal_action_notification_break_name:0 "Unabhängigkeit gewährt"
 vassal_action_notification_break_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat unseren Status als [concept_vassal] beendet. Wir sind wieder unabhängig."
 vassal_proposal_notification_break_name:0 "Unabhängigkeit gefordert"
 vassal_proposal_notification_break_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] verlangt, dass wir unser [Concept('concept_vassal', 'Vasallenverhältnis')] beenden."
 vassal_proposal_notification_break_effects_desc:0 "Wenn wir annehmen, wird es wieder voll unabhängig."
 vassal_proposal_break_accepted_name:0 "Unabhängigkeit gewährt"
 vassal_proposal_break_accepted_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung angenommen, unseren Status als [concept_vassal] zu beenden. Wir sind wieder unabhängig."
 vassal_proposal_break_declined_name:0 "Unabhängigkeit verweigert"
 vassal_proposal_break_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung verweigert, unseren Status als [concept_vassal] zu beenden."
 vassal_proposal_third_party_break_accepted_name:0 "Unabhängigkeit gewährt"
 vassal_proposal_third_party_break_accepted_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat den Status [INITIATOR_COUNTRY.GetAltName('GEN')] als [concept_vassal] beendet, sodass es seine volle Unabhängigkeit zurückhat."
 vassal_proposal_third_party_break_declined_name:0 "Unabhängigkeit verweigert"
 vassal_proposal_third_party_break_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat verweigert, den Status [INITIATOR_COUNTRY.GetAltName('GEN')] als [concept_vassal] zu beenden."

 personal_union:0 "Personalunion"
 personal_union_action_name:0 "[concept_personal_union]"
 personal_union_action_propose_name:0 "Zur [concept_personal_union] machen"
 personal_union_action_break_name:0 "Unabhängigkeit gewähren"
 personal_union_action_ask_to_break_name:0 "Unabhängigkeit fordern"
 personal_union_desc:1 "#header $personal_union$#!\n$TOOLTIP_DELIMITER$\nEin [concept_diplomatic_pact], der eine [concept_subject]-Beziehung vom Typ „[concept_personal_union]“ zwischen zwei [Concept('concept_country', 'Ländern')] schafft."
 personal_union_pact_desc:0 "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('NOM')|U] ist in einer [concept_personal_union] unter [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('DAT')]."
 personal_union_action_notification_name:0 "Union verlangen"
 personal_union_action_notification_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] fordert, dass wir uns ihm unterwerfen und eine [concept_personal_union] bilden."
 personal_union_action_notification_break_name:0 "Unabhängigkeit gewährt"
 personal_union_action_notification_break_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat unsere [concept_personal_union] beendet. Wir sind wieder unabhängig."
 personal_union_proposal_notification_break_name:0 "Unabhängigkeit gefordert"
 personal_union_proposal_notification_break_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] verlangt, dass wir unsere [concept_personal_union] mit ihm beenden."
 personal_union_proposal_notification_break_effects_desc:0 "Wenn wir annehmen, wird es wieder voll unabhängig."
 personal_union_proposal_break_accepted_name:0 "Unabhängigkeit gewährt"
 personal_union_proposal_break_accepted_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung angenommen, unsere [concept_personal_union] zu beenden. Wir sind wieder unabhängig."
 personal_union_proposal_break_declined_name:0 "Unabhängigkeit verweigert"
 personal_union_proposal_break_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung verweigert, unsere [concept_personal_union] zu beenden."
 personal_union_proposal_third_party_break_accepted_name:0 "Unabhängigkeit gewährt"
 personal_union_proposal_third_party_break_accepted_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die [concept_personal_union] mit [INITIATOR_COUNTRY.GetAltName('DAT')] beendet, sodass es seine volle Unabhängigkeit zurückhat."
 personal_union_proposal_third_party_break_declined_name:0 "Unabhängigkeit verweigert"
 personal_union_proposal_third_party_break_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat verweigert, die [concept_personal_union] mit [INITIATOR_COUNTRY.GetAltName('DAT')] zu beenden."
  
 dominion:0 "Dominion"
 dominion_action_name:0 "[concept_dominion]"
 dominion_action_propose_name:0 "Zum [concept_dominion] machen"
 dominion_action_break_name:0 "Unabhängigkeit gewähren"
 dominion_action_ask_to_break_name:0 "Unabhängigkeit fordern"
 dominion_desc:1 "#header $dominion$#!\n$TOOLTIP_DELIMITER$\nEin [concept_diplomatic_pact], der eine [concept_subject]-Beziehung vom Typ „[concept_dominion]“ zwischen zwei [Concept('concept_country', 'Ländern')] schafft."
 dominion_pact_desc:0 "[SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetAltName('NOM')|U] ist ein [concept_dominion] [SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetAltName('GEN')]."
 dominion_action_notification_name:0 "[concept_dominion] fordern"
 dominion_action_notification_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] fordert, dass wir uns ihm unterwerfen und sein [concept_dominion] werden."
 dominion_action_notification_break_name:0 "Unabhängigkeit gewährt"
 dominion_action_notification_break_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat unseren Status als [concept_dominion] beendet. Wir sind wieder unabhängig."
 dominion_proposal_notification_break_name:0 "Unabhängigkeit gefordert"
 dominion_proposal_notification_break_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] verlangt, dass wir seinen Status als [concept_dominion] beenden."
 dominion_proposal_notification_break_effects_desc:0 "Wenn wir annehmen, wird es wieder voll unabhängig."
 dominion_proposal_break_accepted_name:0 "Unabhängigkeit gewährt"
 dominion_proposal_break_accepted_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung angenommen, unseren Status als [concept_dominion] zu beenden. Wir sind wieder unabhängig."
 dominion_proposal_break_declined_name:0 "Unabhängigkeit verweigert"
 dominion_proposal_break_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung verweigert, unseren Status als [concept_dominion] zu beenden."
 dominion_action_third_party_notification_break_name:0 "Unabhängigkeit gewährt"
 dominion_action_third_party_notification_break_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat den Status [TARGET_COUNTRY.GetAltName('GEN')] als [concept_dominion] beendet, sodass es seine volle Unabhängigkeit zurückhat."
 dominion_proposal_third_party_break_accepted_name:0 "Unabhängigkeit gewährt"
 dominion_proposal_third_party_break_accepted_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat den Status [INITIATOR_COUNTRY.GetAltName('GEN')] als [concept_dominion] beendet, sodass es seine volle Unabhängigkeit zurückhat."
 dominion_proposal_third_party_break_declined_name:0 "Unabhängigkeit verweigert"
 dominion_proposal_third_party_break_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat verweigert, den Status [INITIATOR_COUNTRY.GetAltName('GEN')] als [concept_dominion] zu beenden."
 dominion_proposal_notification_name:0 "Unterwerfung verlangt"
 dominion_proposal_notification_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] fordert, dass wir uns ihm unterwerfen und sein [concept_dominion] werden."
 dominion_proposal_notification_effects_desc:0 "Wenn wir annehmen, werden wir sein Klientelland."
 dominion_proposal_accepted_name:0 "Unterwerfung angenommen"
 dominion_proposal_accepted_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung angenommen, unser [concept_dominion] zu werden."
 dominion_proposal_declined_name:0 "Unterwerfung verweigert"
 dominion_proposal_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat die Forderung abgelehnt, unser [concept_dominion] zu werden."
 dominion_proposal_third_party_accepted_name:0 "Land unterworfen"
 dominion_proposal_third_party_accepted_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat eingewilligt, ein [concept_dominion] [INITIATOR_COUNTRY.GetAltName('GEN')] zu werden."
 dominion_proposal_third_party_declined_name:0 "Unterwerfung verweigert"
 dominion_proposal_third_party_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat verweigert, ein [concept_dominion] [INITIATOR_COUNTRY.GetAltName('GEN')] zu werden."

 dominion_effect_desc_global:0 "Wird ein [concept_dominion]"
 dominion_effect_desc_first:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] wird ein [COUNTRY.GetAdjectiveNoFlag|l]es [concept_dominion]"
 dominion_effect_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM')|U)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM')|U)] wird ein [concept_dominion] [COUNTRY.GetAltName('VON')]"
 
 dominion_trigger_desc_global:0 "Ist ein [concept_dominion]"
 dominion_trigger_false_desc_global:0 "Ist #b kein#! [concept_dominion]"
 dominion_trigger_desc_first:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] ist ein [COUNTRY.GetAdjectiveNoFlag|l]es [concept_dominion]"
 dominion_trigger_false_desc_first:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] ist #b kein#! [COUNTRY.GetAdjectiveNoFlag|l]es [concept_dominion]"
 dominion_trigger_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM')|U)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM')|U)] ist ein [concept_dominion] [COUNTRY.GetAltName('VON')]"
 dominion_trigger_false_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM')|U)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM')|U)] ist #b kein#! [concept_dominion] [COUNTRY.GetAltName('VON')]"
 
 become_dominion:0 "Bitten, ein Dominion zu werden"
 become_dominion_action_name:0 "Bitten, ein [concept_dominion] zu werden"
 become_dominion_desc:1 "#header $become_dominion$#!\n$TOOLTIP_DELIMITER$\nEin [concept_diplomatic_pact], der eine [concept_subject]-Beziehung vom Typ „[concept_dominion]“ zwischen zwei [Concept('concept_country', 'Ländern')] schafft, wobei das vorschlagende Land das [concept_subject] wird."
 become_dominion_proposal_notification_name:0 "[concept_dominion]-Anfrage"
 become_dominion_proposal_notification_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] will sich uns unterwerfen und unser [concept_dominion] werden."
 become_dominion_proposal_notification_effects_desc:0 "Wenn wir annehmen, wird es unser Klientelland."
 become_dominion_proposal_accepted_name:0 "[concept_dominion]-Anfrage angenommen"
 become_dominion_proposal_accepted_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] akzeptiert unser Angebot, sein [concept_dominion] zu werden."
 become_dominion_proposal_declined_name:0 "[concept_dominion]-Anfrage abgelehnt"
 become_dominion_proposal_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unser Angebot abgelehnt, sein [concept_dominion] zu werden."
 become_dominion_proposal_third_party_accepted_name:0 "Land unterworfen"
 become_dominion_proposal_third_party_accepted_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat eingewilligt, der Suzerän [INITIATOR_COUNTRY.GetAltName('GEN')] zu werden, das nun sein [concept_dominion] ist."
 become_dominion_proposal_third_party_declined_name:0 "Unterwerfung verweigert"
 become_dominion_proposal_third_party_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat abgelehnt, der $suzerain$ [INITIATOR_COUNTRY.GetAltName('GEN')] zu werden."

 violate_sovereignty:0 "Souveränität verletzen"
 violate_sovereignty_action_name:0 "Souveränität verletzen"
 violate_sovereignty_wars:1 "Das wirkt sich auf folgende Kriege aus:"
 violate_sovereignty_countries:0 "Die folgenden Ländern könnten sich beteiligen, falls [Country.GetAltName('NOM')] sich weigert:"
 violate_sovereignty_desc:1 "#header $violate_sovereignty$#!\n$TOOLTIP_DELIMITER$\nEine [concept_instant_diplomatic_action], bei der ein [concept_country] ein anderes neutrales Land zwingen kann, sich einem [concept_war] anzuschließen, um Zugriff auf seine Grenzen zu bekommen. Weigert das Ziel-[concept_country] sich, schließt es sich stattdessen den Feinden des vorschlagenden Landes an."
 violate_sovereignty_proposal_accepted_name:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] nimmt unsere Forderungen an"
 violate_sovereignty_proposal_accepted_desc:1 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat sich unserer Seite angeschlossen"
 violate_sovereignty_proposal_declined_name:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat unser Ultimatum verweigert"
 violate_sovereignty_proposal_declined_desc:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat sich unseren Feinden angeschlossen!"
 violate_sovereignty_proposal_notification_name:0 "Souveränität verletzen"
 violate_sovereignty_proposal_notification_desc:0 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] verlangt, dass wir uns seinen Kriegen anschließen."
 violate_sovereignty_proposal_notification_effects_desc:0 "Wenn wir annehmen, werden wir uns ihm in seinen Kriegen anschließen. Wenn wir uns weigern, schließen wir uns seinen Feinden an."
 violate_sovereignty_proposal_third_party_accepted_name:1 "[TARGET_COUNTRY.GetAltName('NOM')|U] akzeptiert die Forderungen [INITIATOR_COUNTRY.GetAltName('VON')]"
 violate_sovereignty_proposal_third_party_accepted_desc:1 "[TARGET_COUNTRY.GetAltName('NOM')|U] ist dem [concept_war] auf der Seite [INITIATOR_COUNTRY.GetAltName('VON')] beigetreten!"
 violate_sovereignty_proposal_third_party_declined_name:1 "[TARGET_COUNTRY.GetAltName('NOM')|U] hat das [INITIATOR_COUNTRY.GetAdjective|l]e Ultimatum verweigert"
 violate_sovereignty_proposal_third_party_declined_desc:1 "[TARGET_COUNTRY.GetAltName('NOM')|U] ist dem [concept_war] gegen [INITIATOR_COUNTRY.GetAltName('AKK')] beigetreten!"

 personal_union_trigger_desc_global:0 "Ist in einer [concept_personal_union]"
 personal_union_trigger_false_desc_global:0 "Ist #b nicht#! in einer [concept_personal_union]"
 personal_union_trigger_desc_first:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] ist in einer [concept_personal_union] mit [COUNTRY.GetAltNameNoFlag('DAT')]"
 personal_union_trigger_false_desc_first:0 "[TARGET_COUNTRY.GetAltName('NOM')|U] ist #b nicht#! in einer [concept_personal_union] mit [COUNTRY.GetAltNameNoFlag('DAT')]"
 personal_union_trigger_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM')|U)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM')|U)] ist in einer [concept_personal_union] unter [COUNTRY.GetAltName('DAT')]"
 personal_union_trigger_false_desc_third:0 "[AddTextIf(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self),TARGET_COUNTRY.GetAltNameNoFlag('NOM')|U)][AddTextIf(Not(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, TARGET_COUNTRY.Self)),TARGET_COUNTRY.GetAltName('NOM')|U)] ist #b nicht#! in einer [concept_personal_union] unter [COUNTRY.GetAltName('DAT')]"

# === [LocEditor:OrphanedKeys] Keys that do not exist in English ===
 OBJECTIVES:0 "[Concept('concept_objective', '$concept_objectives$')]"
 favor:0 "Gefallen"
 USE_FAVOR:0 "Gefallen benutzen"
 OWE_FAVOR:0 "Gefallen schulden"
 CALLING_IN_FAVOR:0 "Fordert Gefallen ein"
 OFFERING_FAVOR:0 "Bietet Gefallen an"
 THEY_DO_NOT_OWE_FAVOR:0 "Sie schulden uns keine Gefallen."
 THEY_OWE_FAVOR:0 "Sie schulden uns schon einen Gefallen."
 WE_OWE_FAVOR:0 "Wir schulden ihnen schon einen Gefallen."
 AI_WILL_ACCEPT_BREAKDOWN_WITH_CALL_IN_FAVOR:0 "Annahmewert: #variable [DiplomaticAction.GetAcceptanceValueWithCallInFavor|+=]#!\n[DiplomaticAction.GetWillAIAcceptDescWithCallInFavor]"
 AI_WILL_ACCEPT_BREAKDOWN_WITH_OWE_FAVOR:0 "Annahmewert: #variable [DiplomaticAction.GetAcceptanceValueWithOweFavor|+=]#!\n[DiplomaticAction.GetWillAIAcceptDescWithOweFavor]"
 redeem_favor:0 "Von Gefallen entbinden"
 redeem_favor_action_name:0 "Von [concept_favor] entbinden"
 redeem_favor_desc:0 "#header $redeem_favor$#!\n$TOOLTIP_DELIMITER$\nEine [concept_instant_diplomatic_action], die den geschuldeten [concept_favor] eines [Concept('concept_country', 'Landes')] gegenüber einem anderen für eine sofortige Erhöhung der [Concept('concept_relation', '$concept_relations$')] verfallen lässt."
 redeem_favor_action_notification_name:0 "Von [concept_favor] entbunden"
 redeem_favor_action_notification_desc:0 "[INITIATOR_COUNTRY.GetName] hat uns von dem [concept_favor] entbunden, den wir ihm schulden, sodass sich unsere Beziehungen verbessert haben."
 subject_power:0 "Klientelmacht"
 subject_power_desc:0 "[concept_subject_power_desc]"
 take_on_debt_action_notification_name:0 "Schulden abbezahlen"
 take_on_debt_action_notification_desc:1 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat einen Teil unserer Landesschulden übernommen. Deshalb schulden wir ihm nun eine #variable [concept_obligation]#!."
 take_on_debt_action_notification_third_party_name:0 "Schulden abbezahlt"
 take_on_debt_action_notification_third_party_desc:1 "[INITIATOR_COUNTRY.GetAltName('NOM')|U] hat einen Teil der Landesschulden [TARGET_COUNTRY.GetAltName('GEN')] abbezahlt. Deshalb schuldet es ihm nun eine #variable [concept_obligation]#!."
